{"version":3,"sources":["components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyBlog/Post/Post.module.css","components/Header/Header.module.css","components/Profile/MyBlog/ProfileInfo/ProfileInfo.module.css","components/Profile/MyBlog/MyBlog.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","assets/images/cat-avatar.png","assets/images/preloader2.svg","components/Profile/Profile.module.css","assets/images/logoOwl.webp","serviceWorker.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/dialogs-reducer.js","components/Dialogs/PersonDialog/PersonDialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","redux/users-reducer.js","components/Users/Users.jsx","components/common/preloader/Preloader.js","components/Users/UsersContainer.jsx","components/Profile/MyBlog/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyBlog/Post/Post.jsx","components/Profile/MyBlog/MyBlog.jsx","components/Profile/MyBlog/MyBlogContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","App.js","redux/navbar-reducer.js","redux/redux-store.js","index.js","components/Navbar/Navbar.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","News","props","className","s","newsBG","Music","musicBG","Settings","settingsBG","initialState","dialogs","id","name","messages","author","message","newMessageBody","dialogsReducer","state","action","type","body","PersonDialog","path","personDialog","activeDialog","to","Message","me","penpal","Dialogs","dialogsListing","dialogsPage","map","d","messagesListing","m","personDialogs","value","onChange","newMessageElement","target","onNewMessageChange","placeholder","onClick","onSendMessageClick","DialogsContainer","connect","dispatch","updateNewMessageBodyCreator","FriendIcon","friendPortrait","friendIcon","src","linkto","alt","Navbar","FriendsListing","friendsPage","friends","sidebar","activeClassName","activeChoice","friendsSidebar","friendsList","NavbarContainer","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","u","userId","followed","Users","pagesCount","Math","ceil","pages","i","push","usersBG","pagination","p","selectedPage","e","onPageChanged","usersList","key","userBlock","userLeft","photos","small","userTemplatePic","userCenter","userRight","axios","withCredentials","headers","then","response","data","resultCode","unfollow","follow","Preloader","preloader1","UsersComponent","pageNumber","toggleIsFetching","setCurrentPage","setUsers","items","this","setTotalUsersCount","totalCount","React","Component","usersPage","ProfileInfo","profile","imgheader","profileinfo","fullName","large","contacts","facebook","lookingForAJobDescription","posts","post","likes","newPostText","profileReducer","newPost","newText","Post","avatar","posttext","likesCount","MyBlog","postsListing","newPostElement","createRef","myblog","inputPost","text","current","updateNewPostText","ref","addPost","MyBlogContainer","profilePage","updateNewPostTextActionCreator","Profile","profileStyle","ProfileContainer","params","setUserProfile","WithUrlDataContComponent","withRouter","Header","header","img","logoOwl","loginBlock","isAuth","login","email","authReducer","HeaderContainer","setAuthUserData","auth","App","render","UsersContainer","component","navbarReducer","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b9bdec4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBG\":\"Users_usersBG__2CxUg\",\"usersList\":\"Users_usersList__33_8g\",\"pagination\":\"Users_pagination__2kEMn\",\"selectedPage\":\"Users_selectedPage__1bO7d\",\"userBlock\":\"Users_userBlock__3VZmB\",\"userLeft\":\"Users_userLeft__1GJiC\",\"userCenter\":\"Users_userCenter__P5__r\",\"userRight\":\"Users_userRight__1rRn-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2y4iT\",\"personDialogs\":\"Dialogs_personDialogs__1t0HG\",\"personDialog\":\"Dialogs_personDialog__255Aw\",\"activeDialog\":\"Dialogs_activeDialog__1_wt5\",\"messages\":\"Dialogs_messages__3MhDK\",\"penpal\":\"Dialogs_penpal__3xgqM\",\"me\":\"Dialogs_me__3XV3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"Post_author__ryOld\",\"post\":\"Post_post__2zKh-\",\"avatar\":\"Post_avatar__2h4_E\",\"likesCount\":\"Post_likesCount__3B1m9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Jeir\",\"img\":\"Header_img__CYprL\",\"loginBlock\":\"Header_loginBlock__19u-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileinfo\":\"ProfileInfo_profileinfo__1EGJw\",\"imgheader\":\"ProfileInfo_imgheader__VrqiZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myblog\":\"MyBlog_myblog__3MaXz\",\"inputPost\":\"MyBlog_inputPost__3YfUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsBG\":\"News_newsBG__1DNFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicBG\":\"Music_musicBG__26gYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsBG\":\"Settings_settingsBG__2PhX-\"};","module.exports = __webpack_public_path__ + \"static/media/cat-avatar.87095d76.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader2.a67153fd.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStyle\":\"Profile_profileStyle__ZJqC2\"};","module.exports = __webpack_public_path__ + \"static/media/logoOwl.aef702cb.webp\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={s.newsBG}>\r\n            News\r\n    </div>\r\n    );\r\n};\r\nexport default News;\r\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\n// import Post from \"../Profile/MyPosts/Post/Post\";\r\nimport s from \"./Music.module.css\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={s.musicBG}>\r\n            Music\r\n    </div>\r\n    );\r\n};\r\nexport default Music;\r\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\n// import Post from \"../Profile/MyPosts/Post/Post\";\r\nimport s from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={s.settingsBG}>\r\n            Settings\r\n    </div>\r\n    );\r\n};\r\nexport default Settings;\r\n","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: \"Dimych\" },\r\n        { id: 2, name: \"wife\" },\r\n        { id: 3, name: \"bro\" }\r\n    ],\r\n\r\n    messages: [\r\n        { id: 0, author: \"me\", message: \"Hi\" },\r\n        { id: 1, author: \"Dimych\", message: \"how r u\" },\r\n        { id: 2, author: \"me\", message: \"great what's new?\" },\r\n        { id: 3, author: \"Dimych\", message: \"let's learn React!\" },\r\n        { id: 4, author: \"me\", message: \"Come on, let's start!\" }\r\n    ],\r\n    newMessageBody: \"\"\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: \r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 9, author: \"me\", message: body }],\r\n                newMessageBody: \"\"\r\n            };\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {...state,\r\n            newMessageBody: action.body};\r\n            \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const sendNewMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = body => \r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body});\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst PersonDialog = props => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.personDialog + \" \" + s.activeDialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonDialog;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = props => {\r\n    const authorStyle = () => props.messages.author==='me' ? s.me : s.penpal\r\n    return <div className={authorStyle()}>{props.messages.author}: {props.messages.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PersonDialog from \"./PersonDialog/PersonDialog\";\r\nimport Message from \"./Message/Message\";\r\nimport s from \"./Dialogs.module.css\";\r\n\r\nconst Dialogs = props => {\r\n\r\n    // let state = props.store.getState().dialogsPage;\r\n    \r\n    let dialogsListing = props.dialogsPage.dialogs.map( d => <PersonDialog id={d.id} name={d.name} /> )\r\n    let messagesListing = props.dialogsPage.messages.map( m => <Message messages={m} />)\r\n    let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    // let newMessageElement = React.createRef()\r\n\r\n    let onSendMessageClick = () => {\r\n        props.onSendMessageClick()\r\n    }\r\n    let onNewMessageChange = (newMessageElement) => {\r\n        let body = newMessageElement.target.value;\r\n        props.onNewMessageChange(body);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.personDialogs}>\r\n                { dialogsListing }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesListing }</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea \r\n                            value = {newMessageBody} \r\n                            onChange = {onNewMessageChange}\r\n                            placeholder=\"Enter your message\"></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick = { onSendMessageClick }>Send message</button>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Dialogs;\r\n","import React from \"react\";  \r\nimport {updateNewMessageBodyCreator, sendNewMessageCreator} from \"../../redux/dialogs-reducer\" ;\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\n// const DialogsContainer = props => {\r\n\r\n//     let state = props.store.getState().dialogsPage;\r\n\r\n//     let sendMessageClick = () => {\r\n//         props.store.dispatch(sendNewMessageCreator())\r\n//     }\r\n//     let newMessageChange = (body) => {\r\n//         props.store.dispatch(updateNewMessageBodyCreator(body))\r\n//     }\r\n\r\n//     return (\r\n//         <Dialogs dialogsPage = {state}\r\n//                 onSendMessageClick = {sendMessageClick}\r\n//                 onNewMessageChange = {newMessageChange} />\r\n//     );\r\n// };\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessageClick: () => {dispatch(sendNewMessageCreator())},\r\n        onNewMessageChange: (body) => {dispatch(updateNewMessageBodyCreator(body))}\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst FriendIcon = props => {\r\n    return (\r\n        <div className={s.friendPortrait}>\r\n            <img className={s.friendIcon} src={props.linkto} alt=\"\"/>\r\n            {props.name}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Navbar = props => {\r\n\r\n    let FriendsListing = props.friendsPage.friends.map( d => <FriendIcon name={d.name} linkto={d.linkto} /> )\r\n\r\n    return (\r\n        <div  className={s.sidebar}>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/profile\" activeClassName={s.activeChoice} >Profile and Blog</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/dialogs\" activeClassName={s.activeChoice} >Dialogs</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/findusers\" activeClassName={s.activeChoice} >Find Users</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/news\" activeClassName={s.activeChoice} >News</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/music\" activeClassName={s.activeChoice} >Music</NavLink>\r\n                    </li>\r\n                </ul>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeChoice} >Settings</NavLink>\r\n            </nav>\r\n            <div className={s.friendsSidebar}>\r\n                <h2>Friends</h2> \r\n                <div className={s.friendsList}>\r\n                    { FriendsListing }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Navbar from './Navbar';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friendsPage: state.friendsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n    return { \r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","const FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 40,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users };\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage };\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n//export of functions - action-creators to components\r\n//these AC-functions just give a class to \r\nexport const follow = userId => ({ type: FOLLOW, userId });\r\nexport const unfollow = userId => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = users => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = totalUsersCount => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\nexport const toggleIsFetching = isFetching => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\n\r\nexport default usersReducer;\r\n","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport userTemplatePic from \"../../assets/images/cat-avatar.png\"\r\nimport { NavLink } from 'react-router-dom'\r\nimport * as axios from 'axios';\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return <div className={s.usersBG}>\r\n        <div className={s.pagination}>\r\n            <ul>\r\n                {pages.map(p => {\r\n                    return <li className={props.currentPage === p && s.selectedPage}\r\n                        onClick={(e) => { props.onPageChanged(p) }}>{p}</li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n        <div className={s.usersList}>\r\n            {props.users.map(u =>\r\n                <div key={u.id} className={s.userBlock} >\r\n                    <div className={s.userLeft} >\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id} >\r\n                                <img src={u.photos.small != null ? u.photos.small : userTemplatePic} alt={u.name} />\r\n                            </NavLink>\r\n\r\n                        </div>\r\n                        <div>\r\n                            {u.id}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={s.userCenter}>\r\n                            <div>{u.name}</div>\r\n                        </div>\r\n                        <div className={s.userRight}>\r\n                            <div>{u.followed\r\n                                ? <button onClick={() => {\r\n\r\n                                    axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {\r\n                                        withCredentials: true,\r\n                                        headers: {\"API-KEY\" : \"eb0c046e-227c-4a33-b9d2-bd8d71c72b1d\"}\r\n                                    })\r\n                                        .then(response => {\r\n                                            if (response.data.resultCode == 0) {\r\n                                                props.unfollow(u.id)\r\n                                            }\r\n                                        });\r\n                                }} >unfollow</button>\r\n\r\n                                : <button onClick={() => {\r\n\r\n                                    axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, {\r\n                                        withCredentials: true,\r\n                                        headers: {\"API-KEY\" : \"eb0c046e-227c-4a33-b9d2-bd8d71c72b1d\"}\r\n\r\n                                    })\r\n                                        .then(response => {\r\n                                            if (response.data.resultCode == 0) {\r\n                                                props.follow(u.id)\r\n                                            }\r\n                                        });\r\n                                }} >follow</button>\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )// end of mapping\r\n            }\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader1 from \"../../..//assets/images/preloader2.svg\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preloader1} alt={'loading...'}/>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleIsFetching\r\n} from '../../redux/users-reducer';\r\nimport * as axios from \"axios\";\r\nimport Users from './Users';\r\nimport s from \"./Users.module.css\";\r\nimport Preloader from '../common/preloader/Preloader';\r\n\r\n\r\nclass UsersComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    //remember where props inherited (from React.Component)\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`, {\r\n            withCredentials: true\r\n        })\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            })\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {\r\n            withCredentials: true,\r\n        })\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div className={s.usersBG}>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                onPageChanged={this.onPageChanged} />\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, \r\n    {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching})(UsersComponent);\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from '../../../common/preloader/Preloader';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    } \r\n    return (\r\n        <div>\r\n            <img\r\n                className={s.imgheader}\r\n                src=\"https://www.beststartcompton.org/wp-content/uploads/2019/02/39875853-header-wallpapers.jpg\"\r\n                alt=\"content-header\"\r\n            />\r\n\r\n            <div className={s.profileinfo}>\r\n                <div>{props.profile.fullName}</div>\r\n                <img src={props.profile.photos.large} alt={props.profile.fullName} />\r\n                <div>{props.profile.contacts.facebook}</div>\r\n                <div>{props.profile.lookingForAJobDescription}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileInfo;\r\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 0, post: \"It's my blog\", likes: 3 },\r\n        { id: 1, post: \"I was a designer for 10 years\", likes: 5 },\r\n        { id: 2, post: \"Now I'm starting to learn React\", likes: 9 }\r\n    ],\r\n    newPostText: \"\",\r\n    profile: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: \r\n            let newPost = {\r\n                id: 3,\r\n                post: state.newPostText,\r\n                likes: 0\r\n            };\r\n            return {...state,\r\n                posts: [newPost, ...state.posts],\r\n                newPostText: \"\"\r\n            };\r\n        \r\n        case UPDATE_NEW_POST_TEXT: \r\n            return {...state,\r\n                newPostText: action.newText\r\n            };\r\n        case SET_USER_PROFILE: \r\n            return {...state,\r\n                profile: action.profile\r\n            };\r\n        \r\n            \r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const updateNewPostTextActionCreator = text => \r\n({type: UPDATE_NEW_POST_TEXT, newText: text});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = props => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img className={s.avatar}\r\n                src=\"https://i.pinimg.com/originals/80/f3/cd/80f3cd1517905873ea6a5c5ed7b53784.jpg\"\r\n                alt=\"post photo\"\r\n            />\r\n            <div className={s.posttext}>{props.post}</div>\r\n            \r\n            <div className={s.likesCount}>likes: {props.likesCount}</div>\r\n            <button>like</button>\r\n        </div>\r\n    );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyBlog.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyBlog = props => {\r\n\r\n    let postsListing = props.posts.map(p => <Post post={p.post} likesCount={p.likes} />)\r\n\r\n    let newPostElement = React.createRef()\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.myblog}>\r\n            <div className={s.inputPost}>\r\n                <h3>My Posts</h3>\r\n                <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} />\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {postsListing}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default MyBlog;\r\n","import React from \"react\";\r\nimport {updateNewPostTextActionCreator, addPostActionCreator} from \"../../../redux/profile-reducer\" ;\r\nimport MyBlog from './MyBlog';\r\nimport { connect } from 'react-redux';\r\n\r\n// const MyBlogContainer = props => {\r\n    \r\n//     let state = props.store.getState();\r\n\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n\r\n//     let onPostChange = (text) => {\r\n//         props.store.dispatch(updateNewPostTextActionCreator(text));\r\n//     }\r\n\r\n\r\n//     return (<MyBlog updateNewPostText={onPostChange} addPost={addPost} \r\n//                     posts={state.profilePage.posts}\r\n//                     newPostText = {state.profilePage.newPostText} />);\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {dispatch(updateNewPostTextActionCreator(text))},\r\n        addPost: () => {dispatch(addPostActionCreator())}\r\n    }\r\n}\r\n\r\nconst MyBlogContainer = connect(mapStateToProps, mapDispatchToProps)(MyBlog);\r\n\r\nexport default MyBlogContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./MyBlog/ProfileInfo/ProfileInfo\";\r\nimport s from \"./Profile.module.css\";\r\nimport MyBlogContainer from './MyBlog/MyBlogContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return (\r\n        <div className={s.profileStyle}>\r\n            <ProfileInfo profile={props.profile} />\r\n            <MyBlogContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React from \"react\";\r\nimport Profile from './Profile';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfile } from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {userId = 2;}\r\n        // this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+userId)\r\n            .then(response => {\r\n                // this.props.toggleIsFetching(false);\r\n                this.props.setUserProfile(response.data);\r\n            })\r\n    }\r\n    render () {\r\n        return <Profile {...this.props} profile={this.props.profile} />\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile\r\n});\r\n\r\nlet WithUrlDataContComponent = withRouter(ProfileContainer);\r\n\r\nexport default connect (mapStateToProps, {setUserProfile}) (WithUrlDataContComponent);\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logoOwl from \"../../assets/images/logoOwl.webp\"\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img className={s.img} src={logoOwl} alt=\"logo\" />\r\n            <div className={s.loginBlock} >\r\n                {props.isAuth ? props.login\r\n                : <NavLink to={ '/login'} > LOGIN\r\n                </NavLink>\r\n                }\r\n                \r\n            </div>\r\n        </header>\r\n    );\r\n};\r\nexport default Header;\r\n","const SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\n// {\"data\":{\"id\":5434,\"login\":\"0nton\",\"email\":\"dunkip24@gmail.com\"},\"messages\":[],\"resultCode\":0}\r\nlet initialState = { \r\n    data:{\r\n        id: null,\r\n        login: null,\r\n        email: null\r\n    },\r\n    messages:[],\r\n    resultCode:0,\r\n    isFetching: false,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            \r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                isAuth: true\r\n                 // data from here (second line) will rewrite existed properties with same name\r\n            };\r\n\r\n    default:\r\n            return state;\r\n    }\r\n};\r\n//export of functions - action-creators to components\r\n//these AC-functions just give a class to \r\nexport const setAuthUserData = (id, login, email) => ({ type: SET_USER_DATA, data: {id, login, email} });\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport Header from './Header';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { setAuthUserData } from '../../redux/auth-reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        // let userId = this.props.match.params.userId;\r\n        // this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n            withCredentials: true\r\n        })\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, login, email} = response.data.data;\r\n                    this.props.setAuthUserData(id, login, email);\r\n                }\r\n            })\r\n    }\r\n    render () {\r\n        return <Header {...this.props} />\r\n    \r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.data.login\r\n});\r\nexport default connect(mapStateToProps, {setAuthUserData}) (HeaderContainer);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\"; // BrowserRouter,\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport NavbarContainer from './components/Navbar/NavbarContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n\nconst App = props => {\n    \n    return (        \n        <div className=\"app_wrapper\">\n            <HeaderContainer />\n            <NavbarContainer />\n            <div className=\"allcontent\">\n                <Route\n                    path=\"/dialogs\"\n                    render={() => (\n                        <DialogsContainer />\n                    )}\n                />\n                <Route\n                    path=\"/profile/:userId?\"\n                    render={() => (\n                        <ProfileContainer />\n                    )}\n                />\n                <Route\n                    path=\"/findusers\"\n                    render={() => (\n                        <UsersContainer />\n                    )}\n                />\n                <Route path=\"/news\" component={News} />\n                <Route path=\"/music\" component={Music} />\n                <Route path=\"/settings\" component={Settings} />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","\r\nlet initialState = {\r\n    friends: [\r\n        {\r\n            id: 0,\r\n            name: \"me\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR0qSOrkr1kqwdgdyuHRxwG_78gd3fX2S9SAMqPGwJQLipr_Loe&s\"\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTBY_mo1rQhrhsQTkX3jYf4NlJ_3G373KksH8YStqpH9Ie0Mmagrg&s\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"wife\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPaHmYCx5J4tzO1c7OSThTK5U99OsZgx2sD9VhnjTb3SeCPjrM&s\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"bro\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT2WGfX5qsWFPFmBCE-g8KRk7SS-V1HXZo2vX8dRYOw0NrhtcV6&s\"\r\n        }\r\n        //https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSOGsz4cwsoNq09gMJ3roiDb8rOoRAoNr1DBn3PesZh1pnstzBS&s\r\n        //https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTHk85P6r1iGSHDaJ286R2Ml5oTlwJoQAAxh5Y5SBl7Ju3THMaV&s\r\n    ]\r\n};\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default navbarReducer;","import { combineReducers, createStore } from \"redux\";\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport navbarReducer from './navbar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\n\r\n// import React from 'react';\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    friendsPage: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store'\nimport { HashRouter } from \"react-router-dom\"; \nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store} >\n            <App />\n        </Provider>\n        \n    </HashRouter>, document.getElementById('root')\n);\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Navbar_sidebar__1WuLf\",\"activeChoice\":\"Navbar_activeChoice__36Exb\",\"friendsSidebar\":\"Navbar_friendsSidebar__3Arg2\",\"friendsList\":\"Navbar_friendsList__1DLQD\",\"friendPortrait\":\"Navbar_friendPortrait__T6fCf\",\"friendIcon\":\"Navbar_friendIcon__39Vbb\"};"],"sourceRoot":""}