{"version":3,"sources":["components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","assets/images/cat-avatar.png","assets/images/preloader2.svg","components/Profile/Profile.module.css","assets/images/giraffe-avatar.png","assets/images/logoOwl-ef.png","assets/images/circles–°ircle.svg","components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/Mainpage/Main.module.css","serviceWorker.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","hoc/withLoginRedirect.js","redux/dialogs-reducer.js","components/Dialogs/PersonDialog/PersonDialog.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","api/api.js","redux/users-reducer.js","components/common/paginator/paginator.js","components/Users/User.jsx","components/Users/Users.jsx","components/common/preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/MyBlog/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyBlog/ProfileInfo/ProfileStatus.jsx","components/Profile/MyBlog/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyBlog/Post/Post.jsx","components/Profile/MyBlog/MyBlog.jsx","components/Profile/MyBlog/MyBlogContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","components/common/preloader/PreloaderBlue.js","components/Mainpage/Main.jsx","App.js","redux/navbar-reducer.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","components/Profile/MyBlog/Post/Post.module.css","components/common/paginator/paginator.module.css","components/Profile/MyBlog/ProfileInfo/ProfileInfo.module.css","components/Profile/MyBlog/MyBlog.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","News","props","className","s","newsBG","Music","musicBG","Settings","settingsBG","mapStateToPropsForRedirect","state","isAuth","auth","withLoginRedirect","Component","RedirectComponent","this","to","React","connect","initialState","dialogs","id","name","messages","author","message","dialogsReducer","action","type","body","newMessageBody","PersonDialog","path","personDialog","activeDialog","Message","me","penpal","Textarea","input","meta","hasError","touched","error","formControl","Input","required","value","maxLengthCreator","maxLength","length","maxLength100","ReduxAddMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsListing","dialogsPage","map","d","messagesListing","m","personDialogs","values","sendMessage","compose","sendNewMessage","Navbar","sidebar","activeClassName","activeChoice","NavbarContainer","friendsPage","dispatch","instance","axios","baseURL","withCredentials","headers","dimychAPI","currentPage","pageSize","get","then","resp","data","userId","console","warn","profileAPI","getProfile","post","delete","authAPI","email","password","rememberMe","getStatus","updateStatus","status","put","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","unfollow","follow","userBlock","userLeft","src","photos","small","userTemplatePic","alt","userCenter","userRight","disabled","some","Users","usersBG","usersList","Preloader","preloader1","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","resultCode","followUser","unfollowUser","page","items","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileInfo","profile","profileinfo","fullName","large","contacts","facebook","lookingForAJobDescription","posts","likes","profileReducer","newPost","newPostText","Post","avatar","giraffeAva","posttext","likesCount","maxLength20","ReduxAddNewBlogPostForm","MyBlog","postsListing","myblog","inputPost","addPost","MyBlogContainer","profilePage","Profile","profileStyle","ProfileContainer","params","autorizedUserId","getUserProfile","response","withRouter","Header","header","container","headerContent","img","logoOwl","loginBlock","login","logout","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","ReduxLoginForm","formSummaryError","stopSubmit","_error","formData","initialized","appReducer","PreloaderBlue","blueCircle","MainPage","main","story","storyPost","authorDate","href","App","initializeApp","exact","render","Main","DialogsContainer","app","promise","Promise","all","friends","linkto","navbarReducer","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,OAAS,uB,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,yB,oBCA5BD,EAAOC,QAAU,CAAC,WAAa,+B,oBCD/BD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCC3CD,EAAOC,QAAU,CAAC,aAAe,gC,oBCDjCD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,gD,qGCC3CD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,aAAe,8BAA8B,aAAe,8BAA8B,SAAW,0BAA0B,OAAS,wBAAwB,GAAK,sB,mBCAzQD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,UAAY,yBAAyB,WAAa,0BAA0B,aAAe,4BAA4B,UAAY,yBAAyB,SAAW,wBAAwB,WAAa,0BAA0B,UAAY,2B,mBCArSD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,aAAe,6BAA6B,eAAiB,+BAA+B,YAAc,4BAA4B,eAAiB,+BAA+B,WAAa,6B,mBCAvPD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,WAAa,2B,6ECWzEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sFCPSC,EAPF,SAACC,GACV,OACI,yBAAKC,UAAWC,IAAEC,QAAlB,S,kBCMOC,EAPD,SAACJ,GACX,OACI,yBAAKC,UAAWC,IAAEG,SAAlB,U,kBCKOC,EAPE,SAACN,GACd,OACI,yBAAKC,UAAWC,IAAEK,YAAlB,a,cCHJC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAoB,SAACC,GAAe,IACvCC,EADsC,iLAGpC,OAAKC,KAAKf,MAAMU,OAET,kBAACG,EAAcE,KAAKf,OAFI,kBAAE,IAAF,CAAWgB,GAAE,eAHR,GACZC,IAAMJ,WAUtC,OAFqCK,YAASV,EAATU,CAAqCJ,I,eCf1EK,EAAe,CACfC,QAAS,CACL,CAAEC,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,QAGnBC,SAAU,CACN,CAAEF,GAAI,EAAGG,OAAQ,KAAMC,QAAS,MAChC,CAAEJ,GAAI,EAAGG,OAAQ,SAAUC,QAAS,WACpC,CAAEJ,GAAI,EAAGG,OAAQ,KAAMC,QAAS,qBAChC,CAAEJ,GAAI,EAAGG,OAAQ,SAAUC,QAAS,sBACpC,CAAEJ,GAAI,EAAGG,OAAQ,KAAMC,QAAS,2BAyBzBC,EArBQ,WAAmC,IAAlCjB,EAAiC,uDAAzBU,EAAcQ,EAAW,uCACrD,OAAQA,EAAOC,MACX,IApBa,eAqBT,IAAIC,EAAOF,EAAOG,eAClB,OAAO,eACArB,EADP,CAEIc,SAAS,GAAD,mBACDd,EAAMc,UADL,CAEJ,CAAEF,GAAI,EAAGG,OAAQ,KAAMC,QAASI,OAI5C,QACI,OAAOpB,I,yBCjBJsB,EAVM,SAAA/B,GACjB,IAAIgC,EAAO,YAAchC,EAAMqB,GAE/B,OACI,yBAAKpB,UAAWC,IAAE+B,aAAe,IAAM/B,IAAEgC,cACrC,kBAAC,IAAD,CAASlB,GAAIgB,GAAOhC,EAAMsB,QCAvBa,EALC,SAAAnC,GAEZ,OAAO,yBAAKC,UADsC,OAAxBD,EAAMuB,SAASC,OAAgBtB,IAAEkC,GAAKlC,IAAEmC,QAC3BrC,EAAMuB,SAASC,OAA/C,KAAyDxB,EAAMuB,SAASE,U,2CCFtEa,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASxC,EAAW,gCAC3CyC,EAAWD,EAAKE,SAAWF,EAAKG,MACtC,OACI,yBAAK1C,UAAWC,IAAE0C,YAAc,KAAOH,EAAWvC,IAAEyC,MAAQ,KACxD,6BACI,8CAAcJ,EAAWvC,KAE3ByC,GAAY,8BAAOD,EAAKG,SAMzBE,EAAQ,SAAC,GAA6B,IAA5BN,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASxC,EAAW,gCACxCyC,EAAWD,EAAKE,SAAWF,EAAKG,MACtC,OACI,yBAAK1C,UAAWC,IAAE0C,YAAc,KAAOH,EAAWvC,IAAEyC,MAAQ,KACxD,6BACI,2CAAWJ,EAAWvC,KAExByC,GAAY,8BAAOD,EAAKG,SCxBzBG,EAAW,SAACC,GACrB,IAAKA,EACL,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,KAAMA,EAAMG,OAASD,GACrB,MAAM,8BAAN,OAAqCA,EAArC,cCCEE,EAAeH,EAAiB,KAyChCI,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAjBL,SAACrD,GACpB,OACI,0BAAMuD,SAAUvD,EAAMwD,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWpB,EACdhB,KAAK,iBACLqC,YAAY,qBACZC,SAAU,CAACd,EAASK,MAG5B,6BACI,qDAQDU,EAzCC,SAAA7D,GAEZ,IAAI8D,EAAiB9D,EAAM+D,YAAY3C,QAAQ4C,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAc5C,GAAI4C,EAAE5C,GAAIC,KAAM2C,EAAE3C,UACpF4C,EAAkBlE,EAAM+D,YAAYxC,SAASyC,KAAI,SAAAG,GAAC,OAAI,kBAAC,EAAD,CAAS5C,SAAU4C,OAM7E,OACI,yBAAKlE,UAAWC,IAAEkB,SACd,yBAAKnB,UAAWC,IAAEkE,eACbN,GAEL,yBAAK7D,UAAWC,IAAEqB,UACd,6BAAM2C,GACN,kBAACd,EAAD,CAAqBG,SAXb,SAACc,GACjBrE,EAAMsE,YAAYD,EAAOvC,sBCDlByC,cAAQrD,aAND,SAACT,GACnB,MAAO,CACHsD,YAAatD,EAAMsD,eAIqB,CAAES,eNoBpB,SAAA1C,GAAc,MAAK,CAC7CF,KApCiB,eAqCjBE,qBMrBAlB,EADW2D,CACQV,G,iBCkCRY,EApCA,SAAAzE,GAIX,OACI,yBAAKC,UAAWC,IAAEwE,SACd,6BACI,4BACI,4BACI,kBAAC,IAAD,CAAS1D,GAAG,WAAW2D,gBAAiBzE,IAAE0E,cAA1C,qBAEJ,4BACI,kBAAC,IAAD,CAAS5D,GAAG,WAAW2D,gBAAiBzE,IAAE0E,cAA1C,YAEJ,4BACI,kBAAC,IAAD,CAAS5D,GAAG,aAAa2D,gBAAiBzE,IAAE0E,cAA5C,eAEJ,4BACI,kBAAC,IAAD,CAAS5D,GAAG,QAAQ2D,gBAAiBzE,IAAE0E,cAAvC,SAEJ,4BACI,kBAAC,IAAD,CAAS5D,GAAG,WAAW2D,gBAAiBzE,IAAE0E,cAA1C,kBAGR,kBAAC,IAAD,CAAS5D,GAAG,YAAY2D,gBAAiBzE,IAAE0E,cAA3C,eCrBDC,EAFS3D,aAXF,SAACT,GACnB,MAAO,CACHqE,YAAarE,EAAMqE,gBAIH,SAACC,GACrB,MAAO,KAIa7D,CAA6CuD,GCb/DO,E,OAAWC,OAAc,CAC3BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CAAE,UAAW,0CAIbC,EAAY,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GAClC,OAAOP,EAASQ,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAM,SAAAC,GAAI,OAAIA,EAAKC,SAHnBN,GAAY,SAKLO,GAEZ,OADAC,QAAQC,KAAM,iDACPC,GAAWC,WAAWJ,IAPxBP,GAAY,SASTO,GACR,OAAOZ,EAASiB,KAAK,UAAUL,GAC1BH,MAAM,SAAAC,GAAI,OAAIA,EAAKC,SAXnBN,GAAY,SAaPO,GACV,OAAOZ,EAASkB,OAAO,UAAUN,GAC5BH,MAAM,SAAAC,GAAI,OAAIA,EAAKC,SAGnBQ,GAAU,WAEf,OAAOnB,EAASQ,IAAT,YAFFW,GAAU,SAIXC,EAAOC,GAA+B,IAArBC,EAAoB,wDACzC,OAAOtB,EAASiB,KAAT,aAA4B,CAAEG,QAAOC,WAAUC,gBALjDH,GAAU,WAQf,OAAOnB,EAASkB,OAAT,eAIFH,GAAa,CAEtBC,WAFsB,SAEVJ,GACR,OAAOZ,EAASQ,IAAI,WAAWI,GAC1BH,MAAM,SAAAC,GAAI,OAAIA,EAAKC,SAE5BY,UANsB,SAMXX,GACP,OAAOZ,EAASQ,IAAI,kBAAkBI,IAE1CY,aATsB,SASRC,GACV,OAAOzB,EAAS0B,IAAT,kBAAgC,CAACD,OAAQA,MCxCpDtF,GAAe,CACfwF,MAAO,GACPpB,SAAU,GACVqB,gBAAiB,EACjBtB,YAAa,EACbuB,YAAY,EACZC,oBAAqB,IAwDZC,GAAiB,SAAAzB,GAAW,MAAK,CAAE1D,KAnEvB,mBAmE+C0D,gBAE3D0B,GAAmB,SAAAH,GAAU,MAAK,CAAEjF,KAnEtB,qBAmEgDiF,eAC9DI,GAA0B,SAACJ,EAAYjB,GAAb,MAAyB,CAAEhE,KAnEhC,4BAmEiEiF,aAAYjB,WA6ChGsB,GArGM,WAAmC,IAAlCzG,EAAiC,uDAAzBU,GAAcQ,EAAW,uCACnD,OAAQA,EAAOC,MACX,IAnBO,SAoBH,OAAO,eACAnB,EADP,CAEIkG,MAAOlG,EAAMkG,MAAM3C,KAAI,SAAAmD,GACnB,OAAIA,EAAE9F,KAAOM,EAAOiE,OACT,eAAKuB,EAAZ,CAAeC,UAAU,IAEtBD,OAInB,IA7BS,WA8BL,OAAO,eACA1G,EADP,CAEIkG,MAAOlG,EAAMkG,MAAM3C,KAAI,SAAAmD,GACnB,OAAIA,EAAE9F,KAAOM,EAAOiE,OACT,eAAKuB,EAAZ,CAAeC,UAAU,IAEtBD,OAInB,IAvCU,YAwCN,OAAO,eAAK1G,EAAZ,CAAmBkG,MAAOhF,EAAOgF,QAErC,IAzCiB,mBA0Cb,OAAO,eAAKlG,EAAZ,CAAmB6E,YAAa3D,EAAO2D,cAE3C,IA3CsB,wBA4ClB,OAAO,eAAK7E,EAAZ,CAAmBmG,gBAAiBjF,EAAOiF,kBAE/C,IA7CmB,qBA8Cf,OAAO,eAAKnG,EAAZ,CAAmBoG,WAAYlF,EAAOkF,aAE1C,IA/C0B,4BAgDtB,OAAO,eAAKpG,EAAZ,CACIqG,oBAAqBnF,EAAOkF,WAAP,sBACfpG,EAAMqG,qBADS,CACYnF,EAAOiE,SACtCnF,EAAMqG,oBAAoBO,QAAO,SAAAhG,GAAE,OAAIA,IAAMM,EAAOiE,YAI9D,QACI,OAAOnF,I,+ECrBJ6G,GAtCC,SAAC,GAKb,IAL0F,IAA5EC,EAA2E,EAA3EA,gBAAiBhC,EAA0D,EAA1DA,SAAUD,EAAgD,EAAhDA,YAAakC,EAAmC,EAAnCA,cAAmC,IAApBC,mBAAoB,MAAR,GAAQ,EAErFC,EAAaC,KAAKC,KAAKL,EAAkBhC,GAEzCsC,EAAQ,GACHC,EAAE,EAAGA,GAAGJ,EAAYI,IACzBD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GAT+C,EAUjDQ,mBAAS,GAVwC,oBAUpFC,EAVoF,KAUrEC,EAVqE,KAWrFC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAE7C,OAAO,yBAAKxH,UAAWC,KAAEoI,WACnBJ,EAAgB,GACd,4BAAQK,QAAU,WAAQJ,EAAiBD,EAAgB,KAA3D,QAEHL,EACIR,QAAO,SAAAmB,GAAC,OAAIA,GAAKJ,GAAyBI,GAAKH,KAC/CrE,KAAI,SAACwE,GACF,OAAO,0BAAMvI,UAAYwI,KAAG,gBACvBvI,KAAEwI,aAAepD,IAAgBkD,GACnCtI,KAAEyI,YACDC,IAAOJ,EACPD,QAAS,SAACM,GACNrB,EAAcgB,KACdA,MAIfR,EAAeE,GACZ,4BAAQK,QAAS,WAAQJ,EAAiBD,EAAgB,KAA1D,U,qBCIGY,GAnCJ,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAMjC,EAA2C,EAA3CA,oBAAqBkC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,OAC9C,OACI,yBAAKL,IAAKG,EAAK1H,GAAIpB,UAAWC,KAAEgJ,WAC5B,yBAAKjJ,UAAWC,KAAEiJ,UACd,6BACI,kBAAC,IAAD,CAASnI,GAAI,YAAc+H,EAAK1H,IAC5B,yBAAK+H,IAA0B,MAArBL,EAAKM,OAAOC,MAAgBP,EAAKM,OAAOC,MAAQC,KAAiBC,IAAKT,EAAKzH,SAI7F,6BACKyH,EAAK1H,KAGd,6BACI,yBAAKpB,UAAWC,KAAEuJ,YACd,6BAAMV,EAAKzH,OAEf,yBAAKrB,UAAWC,KAAEwJ,WACd,6BAAMX,EAAK3B,SACL,4BAAQuC,SAAU7C,EAAoB8C,MAAK,SAAAvI,GAAE,OAAIA,IAAO0H,EAAK1H,MAC3DkH,QAAS,WAAQS,EAASD,EAAK1H,MADjC,YAGA,4BAAQsI,SAAU7C,EAAoB8C,MAAK,SAAAvI,GAAE,OAAIA,IAAO0H,EAAK1H,MAC3DkH,QAAS,WAAOU,EAAOF,EAAK1H,MAD9B,eCHXwI,GApBH,SAAC,GAA8E,IAA7EvE,EAA4E,EAA5EA,YAAasB,EAA+D,EAA/DA,gBAAiBrB,EAA8C,EAA9CA,SAAUiC,EAAoC,EAApCA,cAAeb,EAAqB,EAArBA,MAAU3G,EAAW,oFAEtF,OAAO,yBAAKC,UAAWC,KAAE4J,SACrB,kBAAC,GAAD,CAAWxE,YAAaA,EAAakC,cAAeA,EAChDD,gBAAiBX,EAAiBrB,SAAUA,IAChD,yBAAKtF,UAAWC,KAAE6J,WACZpD,EAAM3C,KAAI,SAAAmD,GAAC,OAAI,kBAAC,GAAD,CAAM4B,KAAQ5B,EACXL,oBAAqB9G,EAAM8G,oBAC3B8B,IAAKzB,EAAE9F,GACP2H,SAAUhJ,EAAMgJ,SAChBC,OAAQjJ,EAAMiJ,e,qBCL/Be,GAPC,WACZ,OAAO,6BACH,yBAAKZ,IAAKa,KAAYT,IAAK,iBCLtBU,GAAW,SAACzJ,GACrB,OAAOA,EAAM0J,UAAUxD,OAGdyD,GAAc,SAAC3J,GACxB,OAAOA,EAAM0J,UAAU5E,UAEd8E,GAAqB,SAAC5J,GAC/B,OAAOA,EAAM0J,UAAUvD,iBAGd0D,GAAiB,SAAC7J,GAC3B,OAAOA,EAAM0J,UAAU7E,aAGdiF,GAAgB,SAAC9J,GAC1B,OAAOA,EAAM0J,UAAUtD,YAEd2D,GAAyB,SAAC/J,GACnC,OAAOA,EAAM0J,UAAUrD,qBCKrB2D,G,2MAKFjD,cAAgB,SAACmB,GACb,EAAK3I,MAAM+G,eAAe4B,GAC1B,EAAK3I,MAAM0K,aAAe/B,EAAY,EAAK3I,MAAMuF,W,mFAJjDxE,KAAKf,MAAM0K,aAAe3J,KAAKf,MAAMsF,YAAavE,KAAKf,MAAMuF,Y,+BAOzD,OAAO,yBAAKtF,UAAWC,KAAE4J,SACxB/I,KAAKf,MAAM6G,WAAa,kBAAC,GAAD,MAAgB,KACzC,kBAAC,GAAD,CAAOD,gBAAiB7F,KAAKf,MAAM4G,gBAC/BrB,SAAUxE,KAAKf,MAAMuF,SACrBD,YAAavE,KAAKf,MAAMsF,YACxBqB,MAAO5F,KAAKf,MAAM2G,MAClBsC,OAAQlI,KAAKf,MAAMiJ,OACnBD,SAAUjI,KAAKf,MAAMgJ,SACrBxB,cAAezG,KAAKyG,cACpBV,oBAAqB/F,KAAKf,MAAM8G,2B,GAnBnB7F,IAAMJ,WAqCpB0D,eACXrD,aAbkB,SAACT,GAEnB,MAAO,CACHkG,MAAOuD,GAASzJ,GAChB8E,SAAU6E,GAAY3J,GACtBmG,gBAAiByD,GAAmB5J,GACpC6E,YAAagF,GAAe7J,GAC5BoG,WAAY0D,GAAc9J,GAC1BqG,oBAAqB0D,GAAuB/J,MAKvB,CAACwI,ON8BR,SAAErD,GACpB,OAAO,SAAEb,GACLA,EAAUkC,IAAyB,EAAMrB,IACzCP,GAAsBO,GACrBH,MAAM,SAAAE,GACsB,IAApBA,EAAKgF,YACN5F,EA9BU,SAAAa,GAAM,MAAK,CAAEhE,KAnExB,SAmEsCgE,UA8B3BgF,CAAYhF,IAE1Bb,EAAUkC,IAAyB,EAAOrB,SMtChBoD,SN2Cd,SAAEpD,GACtB,OAAO,SAAEb,GACLA,EAAUkC,IAAyB,EAAMrB,IACzCP,GAAwBO,GACvBH,MAAM,SAAAE,GACsB,IAApBA,EAAKgF,YACN5F,EA1CY,SAAAa,GAAM,MAAK,CAAEhE,KAnExB,WAmEwCgE,UA0C/BiF,CAAcjF,IAE5Bb,EAAUkC,IAAyB,EAAOrB,SMnDNmB,kBAAgBE,2BAAyByD,aNgB7D,SAACI,EAAMvF,GAC/B,OAAO,SAAER,GACLA,EAAUiC,IAAkB,IAC5BjC,EAAUgC,GAAiB+D,IACvBzF,EAAoByF,EAAMvF,GACrBE,MAAM,SAAAE,GACHZ,EAAUiC,IAAkB,IAC5BjC,EAfc,CAAEnD,KAnElB,YAmEmC+E,MAebhB,EAAKoF,QACzBhG,EAdkC,CAAEnD,KAnE1B,wBAmEuDgF,gBAcnCjB,EAAKqF,oBMvBnDpK,EAFW2D,CAGbkG,I,oBCpBaQ,ICxCahK,IAAMJ,UDAH,SAACb,GAAW,IAAD,EACRiI,oBAAS,GADD,oBACjCiD,EADiC,KACvBC,EADuB,OAEZlD,mBAASjI,EAAMyG,QAFH,oBAEjCA,EAFiC,KAEzB2E,EAFyB,KAItCC,qBAAU,WACND,EAAWpL,EAAMyG,UACd,CAACzG,EAAMyG,SAcd,OACI,8BACOyE,GACC,6BACI,0BAAMI,cAhBE,WACpBH,GAAa,KAeD,IAA4CnL,EAAMyG,QAAU,wCAA5D,MAGPyE,GACG,6BACI,2BACAK,SAdM,SAAC1C,GACnBuC,EAAUvC,EAAE2C,cAAczI,QAcV0I,WAAW,EACXC,OArBM,WACtBP,GAAa,GACbnL,EAAMwG,aAAaC,IAoBH1D,MAAO0D,QEdhBkF,GAjBK,SAAC3L,GAEjB,OAAKA,EAAM4L,QAIP,6BACQ,yBAAK3L,UAAWC,KAAE2L,aAClB,6BAAM7L,EAAM4L,QAAQE,UACpB,kBAAC,GAAD,CAAwBrF,OAAQzG,EAAMyG,OAAQD,aAAcxG,EAAMwG,eAClE,yBAAK4C,IAAKpJ,EAAM4L,QAAQvC,OAAO0C,MAAOvC,IAAKxJ,EAAM4L,QAAQE,WACzD,6BAAM9L,EAAM4L,QAAQI,SAASC,UAC7B,6BAAMjM,EAAM4L,QAAQM,6BATrB,kBAAC,GAAD,O,qBCJX/K,GAAe,CACfgL,MAAO,CACH,CAAE9K,GAAI,EAAG4E,KAAM,eAAgBmG,MAAO,GACtC,CAAE/K,GAAI,EAAG4E,KAAM,qCAAsCmG,MAAO,GAC5D,CAAE/K,GAAI,EAAG4E,KAAM,sDAAuDmG,MAAO,IAEjFR,QAAS,KACTnF,OAAQ,IAqCC2E,GAAY,SAAA3E,GAAM,MAAK,CAAE7E,KA9CnB,aA8CqC6E,WAmBzC4F,GArDQ,WAAmC,IAAlC5L,EAAiC,uDAAzBU,GAAcQ,EAAW,uCACrD,OAAQA,EAAOC,MACX,IAhBS,WAiBL,IAAI0K,EAAU,CACVjL,GAAI,EACJ4E,KAAMtE,EAAO4K,YACbH,MAAO,GAEX,OAAO,eACA3L,EADP,CAEI0L,MAAM,CAAEG,GAAH,mBAAe7L,EAAM0L,UAGlC,IA1BiB,mBA2Bb,OAAO,eAAK1L,EAAZ,CAAmBmL,QAASjK,EAAOiK,UACvC,IA3BW,aA4BP,OAAO,eAAKnL,EAAZ,CAAmBgG,OAAQ9E,EAAO8E,SAEtC,QACI,OAAOhG,I,6DChBJ+L,GAdF,SAAAxM,GACT,OACI,yBAAKC,UAAWC,KAAE+F,MACd,yBAAKhG,UAAWC,KAAEuM,OACdrD,IAAKsD,KACLlD,IAAK,SAET,yBAAKvJ,UAAWC,KAAEyM,UAAW3M,EAAMiG,MAEnC,yBAAKhG,UAAWC,KAAE0M,YAAlB,UAAsC5M,EAAM4M,YAC5C,0CCPNC,GAAc7J,EAAiB,IAuC/B8J,GAA0BzJ,YAAU,CAAEC,KAAM,mBAAlBD,EAhBL,SAACrD,GACxB,OACI,0BAAMuD,SAAUvD,EAAMwD,cAClB,wCACA,kBAACC,EAAA,EAAD,CAAOC,UAAWpB,EACdhB,KAAK,cACLqC,YAAY,iBACZC,SAAU,CAACd,EAAU+J,MAEzB,6BACI,iDAQDE,GAvCA,SAAA/M,GAEX,IAAIgN,EAAehN,EAAMmM,MAAMnI,KAAI,SAAAwE,GAAC,OAAI,kBAAC,GAAD,CAAMvC,KAAMuC,EAAEvC,KAAM2G,WAAYpE,EAAE4D,WAM1E,OACI,yBAAKnM,UAAWC,KAAE+M,QACd,yBAAKhN,UAAWC,KAAEgN,WACd,kBAACJ,GAAD,CAAyBvJ,SAPrB,SAACc,GACbrE,EAAMmN,QAAQ9I,EAAOkI,iBAQjB,6BACI,uCACCS,KCTFI,GAFSlM,aAPF,SAACT,GACnB,MAAO,CACH0L,MAAO1L,EAAM4M,YAAYlB,MACzBI,YAAa9L,EAAM4M,YAAYd,eAIU,CAACY,QHyB3B,SAACZ,GAAD,MAAkB,CAAE3K,KArC1B,WAqC0C2K,iBGzBnCrL,CAAoC6L,ICM7CO,GAZC,SAACtN,GAEb,OACI,yBAAKC,UAAWC,KAAEqN,cACd,kBAAC,GAAD,CAAa3B,QAAS5L,EAAM4L,QACxBnF,OAAUzG,EAAMyG,OAChBD,aAAexG,EAAMwG,eACzB,kBAAC,GAAD,QCLNgH,G,4LAEE,IAAI5H,EAAS7E,KAAKf,MAAMF,MAAM2N,OAAO7H,OAChCA,IACDA,EAAS7E,KAAKf,MAAM0N,iBAExB3M,KAAKf,MAAM2N,eAAgB/H,GAC3B7E,KAAKf,MAAMuG,UAAWX,K,+BAGtB,OAAO,kBAAC,GAAD,iBAAa7E,KAAKf,MAAlB,CACH4L,QAAW7K,KAAKf,MAAM4L,QACtBnF,OAAU1F,KAAKf,MAAMyG,OACrBD,aAAgBzF,KAAKf,MAAMwG,oB,GAbRvF,IAAMJ,WAyBtB0D,eACXrD,aARkB,SAACT,GAAD,MAAY,CAC9BmL,QAASnL,EAAM4M,YAAYzB,QAC3BnF,OAAQhG,EAAM4M,YAAY5G,OAC1BiH,gBAAiBjN,EAAME,KAAKgF,KAAKtE,GACjCX,OAAQD,EAAME,KAAKD,UAIO,CAACiN,eLQD,SAAA/H,GAAM,OAAI,SAAAb,GACpC,OAAOM,GAAyBO,GAAQH,MAAK,SAAAE,GACzCZ,EALkC,CAAEnD,KAtCnB,mBAsC2CgK,QAKpCjG,SKVeY,ULiBtB,SAAAX,GAAM,OAAI,SAAAb,GAC/BgB,GAAWQ,UAAUX,GAChBH,MAAK,SAAAmI,GACF7I,EAASqG,GAAUwC,EAASjI,YKpBkBa,aLwB9B,SAAAC,GAAM,OAAI,SAAA1B,GAClCgB,GAAWS,aAAaC,GACnBhB,MAAK,SAAAmI,GAC+B,IAA7BA,EAASjI,KAAKgF,YAClB5F,EAASqG,GAAU3E,WK3B3BoH,IAFWtJ,CAIXiJ,I,yCCNWM,GA1BA,SAAC9N,GACZ,OACI,4BAAQC,UAAWC,KAAE6N,QACjB,yBAAK9N,UAAWC,KAAE8N,WACd,yBAAK/N,UAAWC,KAAE+N,eACd,yBAAKhO,UAAWC,KAAEgO,IAAK9E,IAAK+E,KAAS3E,IAAI,SACzC,6BACI,4CACA,2DAEJ,yBAAKvJ,UAAWC,KAAEkO,YACbpO,EAAMU,OACL,6BACGV,EAAMqO,MACP,4BAAQ9F,QAASvI,EAAMsO,QAAvB,YAEF,kBAAC,IAAD,CAAStN,GAAK,UAAd,e,SCjBtBG,GAAe,CACfwE,KAAK,CACDtE,GAAI,KACJgN,MAAO,KACPjI,MAAO,MAEX7E,SAAS,GACToJ,WAAW,EACX9D,YAAY,EACZnG,QAAQ,GAkBC6N,GAAkB,SAAClN,EAAIgN,EAAOjI,EAAO1F,GAAnB,MAA+B,CAAEkB,KA9B1C,gBA8B+D4M,QACjF,CAACnN,KAAIgN,QAAOjI,QAAO1F,YAEV+N,GAAkB,kBAAM,SAAC1J,GAClC,OAAOoB,KACNV,MAAK,SAAAmI,GACF,GAAiC,IAA7BA,EAASjI,KAAKgF,WAAkB,CAAC,IAAD,EACPiD,EAASjI,KAAKA,KAAlCtE,EAD2B,EAC3BA,GAAIgN,EADuB,EACvBA,MAAOjI,EADgB,EAChBA,MAChBrB,EAASwJ,GAAgBlN,EAAIgN,EAAOjI,GAAO,UAwBxCsI,GA/CK,WAAmC,IAAlCjO,EAAiC,uDAAzBU,GAAcQ,EAAW,uCAClD,OAAQA,EAAOC,MACX,IAjBc,gBAmBV,OAAO,eACAnB,EADP,CAEIkF,KAAMhE,EAAO6M,QACb9N,OAAQiB,EAAO6M,QAAQ9N,SAGnC,QACQ,OAAOD,ICvBbkO,G,iLAGE,OAAO,kBAAC,GAAW5N,KAAKf,W,GAHFiB,IAAMJ,WAWrBK,gBAJS,SAACT,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACnB2N,MAAO5N,EAAME,KAAKgF,KAAK0I,SAEa,CAACC,ODuCnB,kBAAM,SAACvJ,GACzBoB,KACCV,MAAK,SAAAmI,GAC+B,IAA7BA,EAASjI,KAAKgF,YACd5F,EAASwJ,GAAgB,KAAM,KAAM,MAAM,UC3CxCrN,CAAoCyN,ICuB7CC,GAAiBvL,YAAU,CAC7BC,KAAM,SADaD,EA9BL,SAACrD,GACf,OACI,0BAAMuD,SAAUvD,EAAMwD,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOnC,KAAM,QACTqC,YAAa,QACbD,UAAWb,EACXe,SAAU,CAACd,MAGnB,6BACI,kBAACW,EAAA,EAAD,CAAOnC,KAAM,WACTM,KAAM,WACN+B,YAAa,WACbD,UAAWb,EACXe,SAAU,CAACd,MAGnB,6BACI,kBAACW,EAAA,EAAD,CAAOnC,KAAM,aAAcM,KAAK,WAAW8B,UAAW,UAD1D,eAGC1D,EAAM2C,OAAS,yBAAK1C,UAAWC,IAAE2O,kBAC7B7O,EAAM2C,OAEX,6BACI,8CA0BDzB,gBAHS,SAACT,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAEiB,CAAE2N,MFhBrB,SAACjI,EAAOC,EAAUC,GAAlB,OAAiC,SAACvB,GACnDoB,GAAcC,EAAOC,EAAUC,GAC9Bb,MAAK,SAAAmI,GACF,GAAiC,IAA7BA,EAASjI,KAAKgF,WACd5F,EAAS0J,UACN,CACH,IAAIhN,EAAUmM,EAASjI,KAAKpE,SAAS2B,OAAS,EAAI0K,EAASjI,KAAKpE,SAAS,GAAK,aAC9EwD,EAAS+J,aAAW,QAAS,CAACC,OAAQtN,YESnCP,EAjBD,SAAClB,GAIX,OAAIA,EAAMU,OACC,kBAAC,IAAD,CAAUM,GAAE,aAGhB,6BACH,6CACA,kBAAC4N,GAAD,CAAgBrL,SATF,SAACyL,GACfhP,EAAMqO,MAAMW,EAAS5I,MAAO4I,EAAS3I,SAAU2I,EAAS1I,mBCzC5DnF,GAAe,CACf8N,aAAa,GA4BFC,GAzBI,WAAmC,IAAlCzO,EAAiC,uDAAzBU,GAAcQ,EAAW,uCACjD,OAAQA,EAAOC,MACX,IARoB,sBAUhB,OAAO,eACAnB,EADP,CAEIwO,aAAa,IAGzB,QACQ,OAAOxO,I,qBCRJ0O,GAPK,WAChB,OAAO,6BACH,yBAAK/F,IAAKgG,KAAY5F,IAAK,iB,oBCuCpB6F,GAvCE,SAACrP,GACd,OACI,yBAAKC,UAAWC,KAAEoP,MACd,yBAAKrP,UAAWC,KAAEqP,OACd,yBAAKtP,UAAWC,KAAEsP,WACd,oDACA,wWAKA,uBAAGvP,UAAWC,KAAEuP,YAAhB,2BAEJ,yBAAKxP,UAAWC,KAAEsP,WACd,sDACA,kmBAQA,uBAAGvP,UAAWC,KAAEuP,YAAhB,2BAEJ,yBAAKxP,UAAWC,KAAEsP,WACd,6DACA,0DACA,sEACA,6OAGA,uBAAGE,KAAM,gDAAT,wBACA,uBAAGzP,UAAWC,KAAEuP,YAAhB,8BCjBdE,G,4LAEE5O,KAAKf,MAAM4P,kB,+BAGX,OAAM7O,KAAKf,MAAMiP,YAKjB,yBAAKhP,UAAU,eACX,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,cACf,kBAAC,IAAD,CACQ4P,OAAK,EAAC7N,KAAK,IACX8N,OAAQ,kBAAO,kBAACC,GAAD,SACnB,kBAAC,IAAD,CACI/N,KAAK,WACL8N,OAAQ,kBAAO,kBAACE,EAAD,SACnB,kBAAC,IAAD,CACIhO,KAAK,oBACL8N,OAAQ,kBAAO,kBAAC,GAAD,SACnB,kBAAC,IAAD,CACI9N,KAAK,aACL8N,OAAQ,kBAAO,kBAAC,GAAD,SACnB,kBAAC,IAAD,CACI9N,KAAK,SACL8N,OAAQ,kBAAO,kBAAC,GAAD,SACnB,kBAAC,IAAD,CAAO9N,KAAK,QAAQ0B,UAAW3D,IAC/B,kBAAC,IAAD,CAAOiC,KAAK,SAAS0B,UAAWtD,IAChC,kBAAC,IAAD,CAAO4B,KAAK,YAAY0B,UAAWpD,MAzBhC,kBAAC,GAAD,U,GANDW,IAAMJ,WA0CT0D,eACXsJ,IACA3M,aANoB,SAACT,GAAD,MAAY,CAChCwO,YAAaxO,EAAMwP,IAAIhB,eAKE,CAACW,cHzCD,kBAAM,SAAC7K,GAChC,IAAImL,EAAUnL,EAAS0J,MACvB0B,QAAQC,IAAI,CAACF,IACRzK,MAAM,WACHV,EAN6B,CAAEnD,KApBf,+BG6Db2C,CAEgCoL,IChE3CxO,GAAe,CACfkP,QAAS,CACL,CACIhP,GAAI,EACJC,KAAM,KACNgP,OACI,8GAER,CACIjP,GAAI,EACJC,KAAM,SACNgP,OACI,gHAER,CACIjP,GAAI,EACJC,KAAM,OACNgP,OACI,8GAER,CACIjP,GAAI,EACJC,KAAM,MACNgP,OACI,gHAYDC,GALO,WAAmC,IAAlC9P,EAAiC,uDAAzBU,GAAyB,iCAEpD,OAAOV,G,oBCrBP+P,GAAWC,YAAgB,CAC3BpD,YAAahB,GACbtI,YAAarC,EACboD,YAAayL,GACbpG,UAAWjD,GACXvG,KAAM+N,GACNuB,IAAKf,GACL5L,KAAMoN,OAGNC,GAAQC,YAAYJ,GAAUK,YAAgBC,OAElDnR,OAAOgR,MAAQA,GAEAA,UCjBfI,IAASjB,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUa,MAAOA,IACb,kBAAC,GAAD,QAGOK,SAASC,eAAe,SzCiHrC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3L,MAAK,SAAA4L,GACjCA,EAAaC,iB,mB0ClInB9R,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,mBCA3HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,cAAgB,8BAA8B,WAAa,6B,mBCAnJD,EAAOC,QAAU,CAAC,OAAS,qBAAqB,KAAO,mBAAmB,OAAS,qBAAqB,WAAa,2B,mBCArHD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,WAAa,8BAA8B,aAAe,kC,mBCAvHD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,UAAY,iC,mBCA7ED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,6B","file":"static/js/main.9622c0f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsBG\":\"News_newsBG__1DNFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicBG\":\"Music_musicBG__26gYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsBG\":\"Settings_settingsBG__2PhX-\"};","module.exports = __webpack_public_path__ + \"static/media/cat-avatar.e850846b.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader2.2e134295.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStyle\":\"Profile_profileStyle__ZJqC2\"};","module.exports = __webpack_public_path__ + \"static/media/giraffe-avatar.050d7da6.png\";","module.exports = __webpack_public_path__ + \"static/media/logoOwl-ef.00586b1e.png\";","module.exports = __webpack_public_path__ + \"static/media/circles–°ircle.78eb393d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2y4iT\",\"personDialogs\":\"Dialogs_personDialogs__1t0HG\",\"personDialog\":\"Dialogs_personDialog__255Aw\",\"activeDialog\":\"Dialogs_activeDialog__1_wt5\",\"messages\":\"Dialogs_messages__3MhDK\",\"penpal\":\"Dialogs_penpal__3xgqM\",\"me\":\"Dialogs_me__3XV3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBG\":\"Users_usersBG__2CxUg\",\"usersList\":\"Users_usersList__33_8g\",\"pagination\":\"Users_pagination__2kEMn\",\"selectedPage\":\"Users_selectedPage__1bO7d\",\"userBlock\":\"Users_userBlock__3VZmB\",\"userLeft\":\"Users_userLeft__1GJiC\",\"userCenter\":\"Users_userCenter__P5__r\",\"userRight\":\"Users_userRight__1rRn-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Navbar_sidebar__1WuLf\",\"activeChoice\":\"Navbar_activeChoice__36Exb\",\"friendsSidebar\":\"Navbar_friendsSidebar__3Arg2\",\"friendsList\":\"Navbar_friendsList__1DLQD\",\"friendPortrait\":\"Navbar_friendPortrait__T6fCf\",\"friendIcon\":\"Navbar_friendIcon__39Vbb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3qB0T\",\"storyPost\":\"Main_storyPost__3Xby3\",\"authorDate\":\"Main_authorDate__3GD6F\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={s.newsBG}>\r\n            News\r\n    </div>\r\n    );\r\n};\r\nexport default News;\r\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\n// import Post from \"../Profile/MyPosts/Post/Post\";\r\nimport s from \"./Music.module.css\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={s.musicBG}>\r\n            Music\r\n    </div>\r\n    );\r\n};\r\nexport default Music;\r\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\n// import Post from \"../Profile/MyPosts/Post/Post\";\r\nimport s from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={s.settingsBG}>\r\n            Settings\r\n    </div>\r\n    );\r\n};\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withLoginRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return < Redirect to={`/login`} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: \"Dimych\" },\r\n        { id: 2, name: \"wife\" },\r\n        { id: 3, name: \"bro\" }\r\n    ],\r\n\r\n    messages: [\r\n        { id: 0, author: \"me\", message: \"Hi\" },\r\n        { id: 1, author: \"Dimych\", message: \"how r u\" },\r\n        { id: 2, author: \"me\", message: \"great what's new?\" },\r\n        { id: 3, author: \"Dimych\", message: \"let's learn React!\" },\r\n        { id: 4, author: \"me\", message: \"Come on, let's start!\" }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    { id: 9, author: \"me\", message: body }\r\n                ]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendNewMessage = newMessageBody => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n});\r\nexport default dialogsReducer;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst PersonDialog = props => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.personDialog + \" \" + s.activeDialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonDialog;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = props => {\r\n    const authorStyle = () => props.messages.author==='me' ? s.me : s.penpal\r\n    return <div className={authorStyle()}>{props.messages.author}: {props.messages.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from \"./FormsControls.module.css\";\r\n\r\n//rest-operator\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n            \r\n        </div>\r\n    )\r\n}","export const required = (value) => {\r\n    if  (value) return undefined;\r\n    return 'field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if  ( value.length < maxLength ) return undefined;\r\n    return `field can't be longer than ${maxLength} symbols`;\r\n}","import React from \"react\";\r\nimport PersonDialog from \"./PersonDialog/PersonDialog\";\r\nimport Message from \"./Message/Message\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst Dialogs = props => {\r\n\r\n    let dialogsListing = props.dialogsPage.dialogs.map(d => <PersonDialog id={d.id} name={d.name} />)\r\n    let messagesListing = props.dialogsPage.messages.map(m => <Message messages={m} />)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.personDialogs}>\r\n                {dialogsListing}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesListing}</div>\r\n                <ReduxAddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field component={Textarea}\r\n                    name='newMessageBody'\r\n                    placeholder='Enter your message'\r\n                    validate={[required,maxLength100]}\r\n                    />\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddMessageForm = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withLoginRedirect } from '../../hoc/withLoginRedirect';\r\nimport { sendNewMessage } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, { sendNewMessage }),\r\n    withLoginRedirect)(Dialogs);\r\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst FriendIcon = props => {\r\n    return (\r\n        <div className={s.friendPortrait}>\r\n            <img className={s.friendIcon} src={props.linkto} alt=\"\"/>\r\n            {props.name}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Navbar = props => {\r\n\r\n    // let FriendsListing = props.friendsPage.friends.map( d => <FriendIcon name={d.name} linkto={d.linkto} /> )\r\n\r\n    return (\r\n        <div className={s.sidebar}>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/profile\" activeClassName={s.activeChoice} >Profile and Blog</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/dialogs\" activeClassName={s.activeChoice} >Dialogs</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/findusers\" activeClassName={s.activeChoice} >Find Users</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/news\" activeClassName={s.activeChoice} >News</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/updates\" activeClassName={s.activeChoice} >Last Updates</NavLink>\r\n                    </li>\r\n                </ul>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeChoice} >Settings</NavLink>\r\n            </nav>\r\n            {/* <div className={s.friendsSidebar}>\r\n                <h2>Friends</h2> \r\n                <div className={s.friendsList}>\r\n                    { FriendsListing }\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Navbar from './Navbar';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friendsPage: state.friendsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n    return { \r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create ({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: { \"API-KEY\": \"eb0c046e-227c-4a33-b9d2-bd8d71c72b1d\" }\r\n})\r\n\r\n//returns promise\r\nexport const dimychAPI = {\r\n    getUsers( currentPage = 1, pageSize = 20) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then( resp => resp.data );\r\n    },\r\n    getUserProfile (userId) {\r\n        console.warn ('Obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n    followUser (userId) {\r\n        return instance.post(`follow/`+userId)\r\n            .then( resp => resp.data );\r\n    },\r\n    unfollowUser (userId) {\r\n        return instance.delete(`follow/`+userId)\r\n            .then( resp => resp.data );\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login ( email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout () {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    \r\n    getProfile (userId) {\r\n        return instance.get(`profile/`+userId)\r\n            .then( resp => resp.data );\r\n    },\r\n    getStatus (userId) {\r\n        return instance.get(`profile/status/`+userId)\r\n    },\r\n    updateStatus (status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}","import { dimychAPI } from '../api/api';\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOWING_PROGRESS = \"TOGGLE_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 40,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false, //show preloader while data loading\r\n    followingInProgress: [] //disable 'follow' button of user, who's ID in array, while his data loading\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users };\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage };\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching };\r\n        }\r\n        case TOGGLE_FOLLOWING_PROGRESS: {\r\n            return { ...state, \r\n                followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(id => id!== action.userId)\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n//export of functions - action-creators to components\r\n//these AC-functions just give a class to \r\nexport const followUser = userId => ({ type: FOLLOW, userId });\r\nexport const unfollowUser = userId => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = users => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = totalUsersCount => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\nexport const toggleIsFetching = isFetching => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n\r\n//requestUsersThunkCreator\r\nexport const requestUsers = (page, pageSize) => { \r\n    return ( dispatch ) => {\r\n        dispatch( toggleIsFetching( true ) );\r\n        dispatch( setCurrentPage ( page ) );\r\n            dimychAPI.getUsers( page, pageSize ) \r\n                .then( data => {\r\n                    dispatch( toggleIsFetching( false ) );\r\n                    dispatch( setUsers( data.items ) );\r\n                    dispatch( setTotalUsersCount( data.totalCount ) );\r\n                })\r\n    }\r\n}\r\n\r\n//followUserThunkCreator\r\nexport const follow = ( userId ) => { \r\n    return ( dispatch ) => {\r\n        dispatch( toggleFollowingProgress( true, userId ));\r\n        dimychAPI.followUser( userId )\r\n        .then( data => {\r\n            if ( data.resultCode === 0 ) {\r\n                dispatch( followUser( userId ) )\r\n            }\r\n            dispatch( toggleFollowingProgress( false, userId ) );\r\n        });\r\n    }\r\n}\r\n// unfollowUserThunkCreator\r\nexport const unfollow = ( userId ) => { \r\n    return ( dispatch ) => {\r\n        dispatch( toggleFollowingProgress( true, userId ));\r\n        dimychAPI.unfollowUser( userId )\r\n        .then( data => {\r\n            if ( data.resultCode === 0 ) {\r\n                dispatch( unfollowUser( userId ) )\r\n            }\r\n            dispatch( toggleFollowingProgress( false, userId ) );\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n","import React, {useState} from 'react';\r\nimport s from './paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize=10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i=0; i<=pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={s.paginator}>\r\n        { portionNumber > 1 && \r\n            <button onClick={ () => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber )\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber)}\r\n                    key = {p}\r\n                    onClick={(e)=>{\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })\r\n        }\r\n\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }} >NEXT</button>}\r\n\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport userTemplatePic from \"../../assets/images/cat-avatar.png\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div key={user.id} className={s.userBlock} >\r\n            <div className={s.userLeft} >\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id} >\r\n                        <img src={user.photos.small != null ? user.photos.small : userTemplatePic} alt={user.name} />\r\n                    </NavLink>\r\n\r\n                </div>\r\n                <div>\r\n                    {user.id}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className={s.userCenter}>\r\n                    <div>{user.name}</div>\r\n                </div>\r\n                <div className={s.userRight}>\r\n                    <div>{user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { unfollow(user.id); }} >unfollow</button>\r\n\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {follow(user.id) }} >follow</button>\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n        \r\n\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport Paginator from '../common/paginator/paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    \r\n    return <div className={s.usersBG}>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} \r\n            totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n        <div className={s.usersList}>\r\n            { users.map(u => <User user = {u}\r\n                                followingInProgress={props.followingInProgress}\r\n                                key={u.id}\r\n                                unfollow={props.unfollow}\r\n                                follow={props.follow}\r\n                            />\r\n                \r\n            )// end of mapping\r\n            }\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader1 from \"../../../assets/images/preloader2.svg\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preloader1} alt={'loading...'}/>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Preloader;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport s from \"./Users.module.css\";\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { withLoginRedirect } from '../../hoc/withLoginRedirect';\r\nimport { compose } from 'redux';\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from '../../redux/users-selectors';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers ( this.props.currentPage, this.props.pageSize );\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers ( pageNumber, this.props.pageSize );\r\n    }\r\n    render() {\r\n            return <div className={s.usersBG}>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                onPageChanged={this.onPageChanged}\r\n                followingInProgress={this.props.followingInProgress} \r\n                />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    // debugger\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers}), \r\n    withLoginRedirect\r\n)(UsersContainer)","import React, {useState, useEffect} from \"react\";\r\n// import s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus (props.status);\r\n        }, [props.status]);\r\n\r\n    const activateEditMode =() => {\r\n        setEditMode (true);\r\n    };\r\n    const deactivateEditMode =() => {\r\n        setEditMode (false);\r\n        props.updateStatus(status);\r\n    };\r\n    \r\n    const onStatusChange =(e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode } > {props.status || 'Doubleclick here to input new status!'} </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input \r\n                    onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n\r\n    }\r\n    onStatusChange = e => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode} >\r\n                            {this.props.status || 'Doubleclick here to input new status!'}\r\n                        </span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange}\r\n                            autoFocus={true}\r\n                            onBlur={this.deactivateEditMode}\r\n                            value={this.state.status}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from '../../../common/preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    } \r\n    return (\r\n        <div>\r\n                <div className={s.profileinfo}>\r\n                <div>{props.profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <img src={props.profile.photos.large} alt={props.profile.fullName} />\r\n                <div>{props.profile.contacts.facebook}</div>\r\n                <div>{props.profile.lookingForAJobDescription}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileInfo;\r\n","import { dimychAPI, profileAPI } from '../api/api';\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 0, post: \"It's my blog\", likes: 3 },\r\n        { id: 1, post: \"It keeps few posts in global state\", likes: 5 },\r\n        { id: 2, post: \"And realized by Flux principles with pure functions\", likes: 9 }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 3,\r\n                post: action.newPostText,\r\n                likes: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts]\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.profile };\r\n        case SET_STATUS:\r\n            return { ...state, status: action.status };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\n\r\nexport const setUserProfile = profile => ({ type: SET_USER_PROFILE, profile });\r\n\r\n//thunk (server request)\r\nexport const getUserProfile = userId => dispatch => { \r\n    return dimychAPI.getUserProfile(userId).then(data => {\r\n        dispatch(setUserProfile(data));\r\n    });\r\n};\r\n\r\nexport const setStatus = status => ({ type: SET_STATUS, status });\r\n\r\n//thunk: here setStatus is action to change State, and it should be invoked after getStatus from server\r\nexport const getStatus = userId => dispatch => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n};\r\n//thunk: here takes 'status' from invoke, PUT it on server, and if OK, setStatus to State\r\nexport const updateStatus = status => dispatch => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n            }\r\n    });\r\n};\r\n\r\nexport default profileReducer;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport giraffeAva from \"../../../../assets/images/giraffe-avatar.png\"\r\n\r\nconst Post = props => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img className={s.avatar}\r\n                src={giraffeAva}\r\n                alt={\"post\"}\r\n            />\r\n            <div className={s.posttext}>{props.post}</div>\r\n            \r\n            <div className={s.likesCount}>likes: {props.likesCount}</div>\r\n            <button>like</button>\r\n        </div>\r\n    );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyBlog.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nconst MyBlog = props => {\r\n\r\n    let postsListing = props.posts.map(p => <Post post={p.post} likesCount={p.likes} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.myblog}>\r\n            <div className={s.inputPost}>\r\n                <ReduxAddNewBlogPostForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div>\r\n                <h3>My Blog</h3>\r\n                {postsListing}\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nconst addNewBlogPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <h3>New Post</h3>\r\n            <Field component={Textarea} \r\n                name='newPostText' \r\n                placeholder='enter new post' \r\n                validate={[required, maxLength20]}\r\n            />\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddNewBlogPostForm = reduxForm({ form: 'NewBlogPostBody' })(addNewBlogPostForm);\r\n\r\nexport default MyBlog;\r\n","import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\" ;\r\nimport MyBlog from './MyBlog';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst MyBlogContainer = connect(mapStateToProps, {addPost})(MyBlog);\r\n\r\nexport default MyBlogContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./MyBlog/ProfileInfo/ProfileInfo\";\r\nimport s from \"./Profile.module.css\";\r\nimport MyBlogContainer from './MyBlog/MyBlogContainer';\r\n// import { updateStatus } from '../../redux/profile-reducer';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={s.profileStyle}>\r\n            <ProfileInfo profile={props.profile} \r\n                status = {props.status} \r\n                updateStatus ={props.updateStatus} />\r\n            <MyBlogContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React from \"react\";\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom'\r\n// import { withLoginRedirect } from '../../hoc/withLoginRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n        }\r\n        this.props.getUserProfile (userId);\r\n        this.props.getStatus (userId);\r\n    }\r\n    render () {\r\n        return <Profile {...this.props} \r\n            profile = {this.props.profile} \r\n            status = {this.props.status} \r\n            updateStatus = {this.props.updateStatus} \r\n        />\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.data.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose ( \r\n    connect( mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter, \r\n    // withLoginRedirect\r\n) ( ProfileContainer );\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logoOwl from '../../assets/images/logoOwl-ef.png';\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.container}>\r\n                <div className={s.headerContent}>\r\n                    <img className={s.img} src={logoOwl} alt=\"logo\" />\r\n                    <div>\r\n                        <h1>React Js Ace</h1>\r\n                        <h4>Developer's Social Network</h4>\r\n                    </div>\r\n                    <div className={s.loginBlock} >\r\n                        {props.isAuth \r\n                        ? <div> \r\n                            {props.login} \r\n                            <button onClick={props.logout}>Log Out</button>\r\n                        </div>\r\n                        : <NavLink to={ '/login'} > LOGIN\r\n                        </NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </header>\r\n    );\r\n};\r\nexport default Header;\r\n","import { authAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\n// API: {\"data\":{\"id\":5434,\"login\":\"0nton\",\"email\":\"dunkip24@gmail.com\"},\"messages\":[],\"resultCode\":0}\r\nlet initialState = { \r\n    data:{\r\n        id: null,\r\n        login: null,\r\n        email: null\r\n    },\r\n    messages:[],\r\n    resultCode:0,\r\n    isFetching: false,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            \r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n                isAuth: action.payload.isAuth\r\n            };\r\n\r\n    default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id, login, email, isAuth) => ({ type: SET_USER_DATA, payload: \r\n    {id, login, email, isAuth} });\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.me()\r\n    .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, login, email, true));\r\n        }\r\n    })\r\n}\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n    .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\r\n            dispatch(stopSubmit('login', {_error: message}));\r\n        }\r\n    })\r\n}\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n    .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    })\r\n}\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n    render () {\r\n        return <Header {...this.props} />\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.data.login\r\n});\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);\r\n","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from \"../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field name={'email'}\r\n                    placeholder={'email'}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field name={'password'}\r\n                    type={'password'}\r\n                    placeholder={'password'}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field name={'rememberMe'} type=\"checkbox\" component={'input'} />Remember Me\r\n            </div>\r\n            {props.error && <div className={s.formSummaryError} >\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst ReduxLoginForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={`/profile`} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Authorization</h1>\r\n        <ReduxLoginForm onSubmit={onSubmmit} />\r\n\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login })(Login);","\r\nimport { getAuthUserData } from './auth-reducer';\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = { \r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            \r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n    default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const InitializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then( ()=> {\r\n            dispatch(InitializedSuccess())\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;\r\n","import React from 'react';\r\nimport blueCircle from \"../../../assets/images/circles–°ircle.svg\";\r\n\r\nlet PreloaderBlue = () => {\r\n    return <div>\r\n        <img src={blueCircle} alt={'loading...'}/>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default PreloaderBlue;","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\n// import Post from \"../Profile/MyPosts/Post/Post\";\r\nimport s from \"./Main.module.css\";\r\n\r\nconst MainPage = (props) => {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.story}>\r\n                <div className={s.storyPost}>\r\n                    <h2>React Social Network</h2>\r\n                    <p>This project was started by me in the SPA format. \r\n                        Its purpose is to apply and demonstrate the maximum \r\n                        of possibilities for a combination of React JS + Redux libraries. \r\n                        This project is currently under development and continues to develop along with my skills. \r\n                        It is also constantly optimized and refactored for new REACT features.</p>\r\n                    <p className={s.authorDate} >Anton Aseev, Jun, 2019</p>\r\n                </div>\r\n                <div className={s.storyPost}>\r\n                    <h2>My name is Anton Aseev</h2>\r\n                    <p>I was graduated with Master's Degree in 'Information Techs in Printing Industry',\r\n                        and started to work with the Design in Printing from 2001. \r\n                        Since 2011, my activity has become connected with the support \r\n                        of web-sites of those companies where I was working at that moment. \r\n                        And since 2018, I began to study in depth HTML5, CSS3 and JS (EC6) in order \r\n                        to engage exclusively in website development. In 2019, I started programming \r\n                        this project under the direction of Dimych. Since then, the project has been \r\n                        significantly modified by me personally in accordance with my ideas and needs.</p>\r\n                    <p className={s.authorDate} >Anton Aseev, Jul, 2019</p>\r\n                </div>\r\n                <div className={s.storyPost}>\r\n                    <h2>Main Techs, already used here</h2>\r\n                    <p>HTML5 with flexes and grids</p>\r\n                    <p>CSS (LESS is almost there, but not yet)</p>\r\n                    <p>'React JS', 'Redux', and also libraries: 'React+Redux', 'Axios', 'Classnames', \r\n                        'Redux-form', 'Redux-thunk', 'Reselect', and 'Jest' for a bit testing.\r\n                        So, Classes, Hooks, Thunks, Tests etc are already there!</p>\r\n                    <a href={\"https://github.com/aseyev/Ace-Social-Network\"}>Link to GitHub repo.</a>\r\n                    <p className={s.authorDate} >Anton Aseev, Aug, 2019</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default MainPage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { withRouter, Route } from \"react-router-dom\"; // BrowserRouter,\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport NavbarContainer from './components/Navbar/NavbarContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from './components/Login/Login';\n// import { getAuthUserData } from './redux/auth-reducer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app-reducer';\nimport PreloaderBlue from \"./components/common/preloader/PreloaderBlue\";\nimport MainPage from './components/Mainpage/Main';\n\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    } \n    render () {\n        if ( !this.props.initialized ) {\n            return <PreloaderBlue />\n        }\n\n        return ( \n        <div className=\"app_wrapper\">\n            <HeaderContainer />\n            <NavbarContainer />\n            <div className=\"allcontent\">\n            <Route\n                    exact path=\"/\"\n                    render={() => (<MainPage />)}/>\n                <Route\n                    path=\"/dialogs\"\n                    render={() => (<DialogsContainer />)}/>\n                <Route\n                    path=\"/profile/:userId?\"\n                    render={() => (<ProfileContainer />)}/>\n                <Route\n                    path=\"/findusers\"\n                    render={() => (<UsersContainer />)}/>\n                <Route\n                    path=\"/login\"\n                    render={() => (<LoginPage />)}/>\n                <Route path=\"/news\" component={News} />\n                <Route path=\"/music\" component={Music} />\n                <Route path=\"/settings\" component={Settings} />\n            </div>\n        </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n","\r\nlet initialState = {\r\n    friends: [\r\n        {\r\n            id: 0,\r\n            name: \"me\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR0qSOrkr1kqwdgdyuHRxwG_78gd3fX2S9SAMqPGwJQLipr_Loe&s\"\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTBY_mo1rQhrhsQTkX3jYf4NlJ_3G373KksH8YStqpH9Ie0Mmagrg&s\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"wife\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPaHmYCx5J4tzO1c7OSThTK5U99OsZgx2sD9VhnjTb3SeCPjrM&s\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"bro\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT2WGfX5qsWFPFmBCE-g8KRk7SS-V1HXZo2vX8dRYOw0NrhtcV6&s\"\r\n        }\r\n        //https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSOGsz4cwsoNq09gMJ3roiDb8rOoRAoNr1DBn3PesZh1pnstzBS&s\r\n        //https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTHk85P6r1iGSHDaJ286R2Ml5oTlwJoQAAxh5Y5SBl7Ju3THMaV&s\r\n    ]\r\n};\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default navbarReducer;","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport navbarReducer from './navbar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport appReducer from './app-reducer';\r\n\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n// import React from 'react';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    friendsPage: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store'\nimport { HashRouter } from \"react-router-dom\"; \nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store} >\n            <App />\n        </Provider>\n        \n    </HashRouter>, document.getElementById('root')\n);\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__pf0w9\",\"error\":\"FormsControls_error__1V-45\",\"formSummaryError\":\"FormsControls_formSummaryError__3DBOv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Jeir\",\"container\":\"Header_container__1aE1c\",\"headerContent\":\"Header_headerContent__1MaNp\",\"loginBlock\":\"Header_loginBlock__19u-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"Post_author__ryOld\",\"post\":\"Post_post__2zKh-\",\"avatar\":\"Post_avatar__2h4_E\",\"likesCount\":\"Post_likesCount__3B1m9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"paginator_pagination__2YVAb\",\"pageNumber\":\"paginator_pageNumber__-ppFK\",\"selectedPage\":\"paginator_selectedPage__2Qe45\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileinfo\":\"ProfileInfo_profileinfo__1EGJw\",\"imgheader\":\"ProfileInfo_imgheader__VrqiZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myblog\":\"MyBlog_myblog__3MaXz\",\"inputPost\":\"MyBlog_inputPost__3YfUR\"};"],"sourceRoot":""}