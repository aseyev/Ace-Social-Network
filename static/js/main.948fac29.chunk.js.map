{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyBlog/Post/Post.module.css","components/Header/Header.module.css","components/Profile/MyBlog/ProfileInfo/ProfileInfo.module.css","components/Profile/MyBlog/MyBlog.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","assets/images/cat-avatar.png","assets/images/preloader2.svg","components/Profile/Profile.module.css","assets/images/logoOwl.webp","serviceWorker.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/dialogs-reducer.js","components/Dialogs/PersonDialog/PersonDialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withLoginRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","api/api.js","redux/users-reducer.js","components/Users/Users.jsx","components/common/preloader/Preloader.js","components/Users/UsersContainer.jsx","components/Profile/MyBlog/ProfileInfo/ProfileStatus.jsx","components/Profile/MyBlog/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyBlog/Post/Post.jsx","components/Profile/MyBlog/MyBlog.jsx","components/Profile/MyBlog/MyBlogContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","redux/navbar-reducer.js","redux/redux-store.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","News","props","className","s","newsBG","Music","musicBG","Settings","settingsBG","initialState","dialogs","id","name","messages","author","message","newMessageBody","dialogsReducer","state","action","type","body","PersonDialog","path","personDialog","activeDialog","to","Message","me","penpal","Dialogs","dialogsListing","dialogsPage","map","d","messagesListing","m","personDialogs","value","onChange","newMessageElement","target","onNewMessageChange","placeholder","onClick","onSendMessageClick","mapStateToPropsForRedirect","isAuth","auth","withLoginRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","updateNewMessageBodyCreator","FriendIcon","friendPortrait","friendIcon","src","linkto","alt","Navbar","FriendsListing","friendsPage","friends","sidebar","activeClassName","activeChoice","friendsSidebar","friendsList","NavbarContainer","instance","axios","baseURL","withCredentials","headers","dimychAPI","currentPage","pageSize","get","then","resp","data","userId","console","warn","profileAPI","getProfile","post","delete","getStatus","updateStatus","status","put","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","filter","Users","pagesCount","Math","ceil","pages","i","push","usersBG","pagination","p","selectedPage","e","onPageChanged","usersList","key","userBlock","userLeft","photos","small","userTemplatePic","userCenter","userRight","disabled","some","unfollow","follow","Preloader","preloader1","UsersComponent","pageNumber","setCurrentPage","getUsers","usersPage","resultCode","followUser","unfollowUser","items","totalCount","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","currentTarget","log","onDoubleClick","autoFocus","onBlur","ProfileInfo","profile","profileinfo","fullName","large","contacts","facebook","lookingForAJobDescription","posts","likes","newPostText","setStatus","profileReducer","newPost","newText","Post","avatar","posttext","likesCount","MyBlog","postsListing","newPostElement","createRef","myblog","inputPost","text","current","updateNewPostText","ref","addPost","MyBlogContainer","profilePage","updateNewPostTextActionCreator","Profile","profileStyle","ProfileContainer","params","getUserProfile","response","withRouter","Header","header","img","logoOwl","loginBlock","login","email","authReducer","HeaderContainer","getAuthUserData","setAuthUserData","Login","App","render","DialogsContainer","UsersContainer","component","navbarReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.948fac29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Navbar_sidebar__1WuLf\",\"activeChoice\":\"Navbar_activeChoice__36Exb\",\"friendsSidebar\":\"Navbar_friendsSidebar__3Arg2\",\"friendsList\":\"Navbar_friendsList__1DLQD\",\"friendPortrait\":\"Navbar_friendPortrait__T6fCf\",\"friendIcon\":\"Navbar_friendIcon__39Vbb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBG\":\"Users_usersBG__2CxUg\",\"usersList\":\"Users_usersList__33_8g\",\"pagination\":\"Users_pagination__2kEMn\",\"selectedPage\":\"Users_selectedPage__1bO7d\",\"userBlock\":\"Users_userBlock__3VZmB\",\"userLeft\":\"Users_userLeft__1GJiC\",\"userCenter\":\"Users_userCenter__P5__r\",\"userRight\":\"Users_userRight__1rRn-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2y4iT\",\"personDialogs\":\"Dialogs_personDialogs__1t0HG\",\"personDialog\":\"Dialogs_personDialog__255Aw\",\"activeDialog\":\"Dialogs_activeDialog__1_wt5\",\"messages\":\"Dialogs_messages__3MhDK\",\"penpal\":\"Dialogs_penpal__3xgqM\",\"me\":\"Dialogs_me__3XV3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"Post_author__ryOld\",\"post\":\"Post_post__2zKh-\",\"avatar\":\"Post_avatar__2h4_E\",\"likesCount\":\"Post_likesCount__3B1m9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Jeir\",\"img\":\"Header_img__CYprL\",\"loginBlock\":\"Header_loginBlock__19u-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileinfo\":\"ProfileInfo_profileinfo__1EGJw\",\"imgheader\":\"ProfileInfo_imgheader__VrqiZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myblog\":\"MyBlog_myblog__3MaXz\",\"inputPost\":\"MyBlog_inputPost__3YfUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsBG\":\"News_newsBG__1DNFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicBG\":\"Music_musicBG__26gYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsBG\":\"Settings_settingsBG__2PhX-\"};","module.exports = __webpack_public_path__ + \"static/media/cat-avatar.87095d76.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader2.2e134295.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStyle\":\"Profile_profileStyle__ZJqC2\"};","module.exports = __webpack_public_path__ + \"static/media/logoOwl.aef702cb.webp\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={s.newsBG}>\r\n            News\r\n    </div>\r\n    );\r\n};\r\nexport default News;\r\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\n// import Post from \"../Profile/MyPosts/Post/Post\";\r\nimport s from \"./Music.module.css\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={s.musicBG}>\r\n            Music\r\n    </div>\r\n    );\r\n};\r\nexport default Music;\r\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\n// import Post from \"../Profile/MyPosts/Post/Post\";\r\nimport s from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={s.settingsBG}>\r\n            Settings\r\n    </div>\r\n    );\r\n};\r\nexport default Settings;\r\n","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: \"Dimych\" },\r\n        { id: 2, name: \"wife\" },\r\n        { id: 3, name: \"bro\" }\r\n    ],\r\n\r\n    messages: [\r\n        { id: 0, author: \"me\", message: \"Hi\" },\r\n        { id: 1, author: \"Dimych\", message: \"how r u\" },\r\n        { id: 2, author: \"me\", message: \"great what's new?\" },\r\n        { id: 3, author: \"Dimych\", message: \"let's learn React!\" },\r\n        { id: 4, author: \"me\", message: \"Come on, let's start!\" }\r\n    ],\r\n    newMessageBody: \"\"\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: \r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 9, author: \"me\", message: body }],\r\n                newMessageBody: \"\"\r\n            };\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {...state,\r\n            newMessageBody: action.body};\r\n            \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const sendNewMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = body => \r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body});\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst PersonDialog = props => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.personDialog + \" \" + s.activeDialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonDialog;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = props => {\r\n    const authorStyle = () => props.messages.author==='me' ? s.me : s.penpal\r\n    return <div className={authorStyle()}>{props.messages.author}: {props.messages.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PersonDialog from \"./PersonDialog/PersonDialog\";\r\nimport Message from \"./Message/Message\";\r\nimport s from \"./Dialogs.module.css\";\r\n\r\nconst Dialogs = props => {\r\n    \r\n    let dialogsListing = props.dialogsPage.dialogs.map( d => <PersonDialog id={d.id} name={d.name} /> )\r\n    let messagesListing = props.dialogsPage.messages.map( m => <Message messages={m} />)\r\n    let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.onSendMessageClick()\r\n    }\r\n    let onNewMessageChange = (newMessageElement) => {\r\n        let body = newMessageElement.target.value;\r\n        props.onNewMessageChange(body);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.personDialogs}>\r\n                { dialogsListing }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesListing }</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea \r\n                            value = {newMessageBody} \r\n                            onChange = {onNewMessageChange}\r\n                            placeholder=\"Enter your message\"></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick = { onSendMessageClick }>Send message</button>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withLoginRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return < Redirect to={`/login`} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {updateNewMessageBodyCreator, sendNewMessageCreator} from \"../../redux/dialogs-reducer\" ;\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withLoginRedirect } from '../../hoc/withLoginRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessageClick: () => {dispatch(sendNewMessageCreator())},\r\n        onNewMessageChange: (body) => {dispatch(updateNewMessageBodyCreator(body))}\r\n    }\r\n}\r\nexport default compose ( connect( mapStateToProps, mapDispatchToProps),\r\n    withLoginRedirect) ( Dialogs );\r\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst FriendIcon = props => {\r\n    return (\r\n        <div className={s.friendPortrait}>\r\n            <img className={s.friendIcon} src={props.linkto} alt=\"\"/>\r\n            {props.name}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Navbar = props => {\r\n\r\n    let FriendsListing = props.friendsPage.friends.map( d => <FriendIcon name={d.name} linkto={d.linkto} /> )\r\n\r\n    return (\r\n        <div  className={s.sidebar}>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/profile\" activeClassName={s.activeChoice} >Profile and Blog</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/dialogs\" activeClassName={s.activeChoice} >Dialogs</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/findusers\" activeClassName={s.activeChoice} >Find Users</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/news\" activeClassName={s.activeChoice} >News</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/music\" activeClassName={s.activeChoice} >Music</NavLink>\r\n                    </li>\r\n                </ul>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeChoice} >Settings</NavLink>\r\n            </nav>\r\n            <div className={s.friendsSidebar}>\r\n                <h2>Friends</h2> \r\n                <div className={s.friendsList}>\r\n                    { FriendsListing }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Navbar from './Navbar';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friendsPage: state.friendsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n    return { \r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create ({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: { \"API-KEY\": \"eb0c046e-227c-4a33-b9d2-bd8d71c72b1d\" }\r\n})\r\n\r\n//returns promise\r\nexport const dimychAPI = {\r\n    getUsers( currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then( resp => resp.data );\r\n    },\r\n    authMe () {\r\n        return instance.get(`auth/me`)\r\n            .then( resp => resp.data );\r\n    },\r\n    getUserProfile (userId) {\r\n        console.warn ('Obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n    followUser (userId) {\r\n        return instance.post(`follow/`+userId)\r\n            .then( resp => resp.data );\r\n    },\r\n    unfollowUser (userId) {\r\n        return instance.delete(`follow/`+userId)\r\n            .then( resp => resp.data );\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    \r\n    getProfile (userId) {\r\n        return instance.get(`profile/`+userId)\r\n            .then( resp => resp.data );\r\n    },\r\n    getStatus (userId) {\r\n        return instance.get(`profile/status/`+userId)\r\n    },\r\n    updateStatus (status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}","import { dimychAPI } from '../api/api';\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOWING_PROGRESS = \"TOGGLE_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 40,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false, //show preloader while data loading\r\n    followingInProgress: [] //disable 'follow' button of user, who's ID in array, while his data loading\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users };\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage };\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching };\r\n        }\r\n        case TOGGLE_FOLLOWING_PROGRESS: {\r\n            return { ...state, \r\n                followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(id => id!== action.userId)\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n//export of functions - action-creators to components\r\n//these AC-functions just give a class to \r\nexport const followUser = userId => ({ type: FOLLOW, userId });\r\nexport const unfollowUser = userId => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = users => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = totalUsersCount => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\nexport const toggleIsFetching = isFetching => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n\r\n//getUsersThunkCreator\r\nexport const getUsers = (currentPage, pageSize) => { \r\n    return ( dispatch ) => {\r\n        dispatch( toggleIsFetching( true ) );\r\n            dimychAPI.getUsers( currentPage, pageSize ) \r\n                .then( data => {\r\n                    dispatch( toggleIsFetching( false ) );\r\n                    dispatch( setUsers( data.items ) );\r\n                    dispatch( setTotalUsersCount( data.totalCount ) );\r\n                })\r\n    }\r\n}\r\n\r\n//followUserThunkCreator\r\nexport const follow = ( userId ) => { \r\n    return ( dispatch ) => {\r\n        dispatch( toggleFollowingProgress( true, userId ));\r\n        dimychAPI.followUser( userId )\r\n        .then( data => {\r\n            if ( data.resultCode === 0 ) {\r\n                dispatch( followUser( userId ) )\r\n            }\r\n            dispatch( toggleFollowingProgress( false, userId ) );\r\n        });\r\n    }\r\n}\r\n// unfollowUserThunkCreator\r\nexport const unfollow = ( userId ) => { \r\n    return ( dispatch ) => {\r\n        dispatch( toggleFollowingProgress( true, userId ));\r\n        dimychAPI.unfollowUser( userId )\r\n        .then( data => {\r\n            if ( data.resultCode === 0 ) {\r\n                dispatch( unfollowUser( userId ) )\r\n            }\r\n            dispatch( toggleFollowingProgress( false, userId ) );\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport userTemplatePic from \"../../assets/images/cat-avatar.png\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div className={s.usersBG}>\r\n        <div className={s.pagination}>\r\n            <ul>\r\n                {pages.map(p => {\r\n                    return <li className={props.currentPage === p && s.selectedPage}\r\n                        onClick={(e) => { props.onPageChanged(p) }}>{p}</li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n        <div className={s.usersList}>\r\n            {props.users.map(u =>\r\n                <div key={u.id} className={s.userBlock} >\r\n                    <div className={s.userLeft} >\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id} >\r\n                                <img src={u.photos.small != null ? u.photos.small : userTemplatePic} alt={u.name} />\r\n                            </NavLink>\r\n\r\n                        </div>\r\n                        <div>\r\n                            {u.id}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={s.userCenter}>\r\n                            <div>{u.name}</div>\r\n                        </div>\r\n                        <div className={s.userRight}>\r\n                            <div>{u.followed\r\n                                ? <button disabled={props.followingInProgress.some( id => id === u.id )} \r\n                                onClick={() => { props.unfollow ( u.id ); }} >unfollow</button>\r\n\r\n                                : <button disabled={props.followingInProgress.some( id => id === u.id )} \r\n                                onClick={() => { props.follow ( u.id ) }} >follow</button>\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )// end of mapping\r\n            }\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader1 from \"../../..//assets/images/preloader2.svg\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preloader1} alt={'loading...'}/>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport s from \"./Users.module.css\";\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { withLoginRedirect } from '../../hoc/withLoginRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass UsersComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers ( this.props.currentPage, this.props.pageSize );\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsers ( pageNumber, this.props.pageSize );\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div className={s.usersBG}>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                onPageChanged={this.onPageChanged}\r\n                followingInProgress={this.props.followingInProgress} \r\n                />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        // isAuth: state.auth.isAuth,\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers}), \r\n    withLoginRedirect\r\n)(UsersComponent)","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n// import Preloader from '../../../common/preloader/Preloader';\r\nclass ProfileStatus extends React.Component {\r\n    \r\n    state ={\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus( this.state.status )\r\n        \r\n    }\r\n    onStatusChange = e => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n    componentDidUpdate () {\r\n        console.log('xxx');\r\n        \r\n    }\r\n\r\n    render () {\r\n        return (\r\n        <div>\r\n            { !this.state.editMode &&  \r\n                <div>\r\n                    <span onDoubleClick = { this.activateEditMode} >{this.props.status || 'Doubleclick here to input new status!'}</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode && \r\n                <div>\r\n                    <input onChange={this.onStatusChange} \r\n                        autoFocus={true} \r\n                        onBlur={this.deactivateEditMode} \r\n                        value={this.state.status} \r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n    }\r\n};\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from '../../../common/preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    } \r\n    return (\r\n        <div>\r\n                <div className={s.profileinfo}>\r\n                <div>{props.profile.fullName}</div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                <img src={props.profile.photos.large} alt={props.profile.fullName} />\r\n                <div>{props.profile.contacts.facebook}</div>\r\n                <div>{props.profile.lookingForAJobDescription}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileInfo;\r\n","import { dimychAPI, profileAPI } from '../api/api';\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 0, post: \"It's my blog\", likes: 3 },\r\n        { id: 1, post: \"I was a designer for 10 years\", likes: 5 },\r\n        { id: 2, post: \"Now I'm starting to learn React\", likes: 9 }\r\n    ],\r\n    newPostText: \"\",\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 3,\r\n                post: state.newPostText,\r\n                likes: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n                newPostText: \"\"\r\n            };\r\n\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return { ...state, newPostText: action.newText };\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.profile };\r\n        case SET_STATUS:\r\n            return { ...state, status: action.status };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\nexport const updateNewPostTextActionCreator = text => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n});\r\nexport const setUserProfile = profile => ({ type: SET_USER_PROFILE, profile });\r\n\r\n//thunk (server request)\r\nexport const getUserProfile = userId => dispatch => { \r\n    return dimychAPI.getUserProfile(userId).then(data => {\r\n        dispatch(setUserProfile(data));\r\n    });\r\n};\r\n\r\nexport const setStatus = status => ({ type: SET_STATUS, status });\r\n\r\n//thunk: here setStatus is action to change State, and it should be invoked after getStatus from server\r\nexport const getStatus = userId => dispatch => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n};\r\n//thunk: here takes 'status' from invoke, PUT it on server, and if OK, setStatus to State\r\nexport const updateStatus = status => dispatch => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n            }\r\n    });\r\n};\r\n\r\nexport default profileReducer;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = props => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img className={s.avatar}\r\n                src=\"https://i.pinimg.com/originals/80/f3/cd/80f3cd1517905873ea6a5c5ed7b53784.jpg\"\r\n                alt=\"post photo\"\r\n            />\r\n            <div className={s.posttext}>{props.post}</div>\r\n            \r\n            <div className={s.likesCount}>likes: {props.likesCount}</div>\r\n            <button>like</button>\r\n        </div>\r\n    );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyBlog.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyBlog = props => {\r\n\r\n    let postsListing = props.posts.map(p => <Post post={p.post} likesCount={p.likes} />)\r\n\r\n    let newPostElement = React.createRef()\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.myblog}>\r\n            <div className={s.inputPost}>\r\n                <h3>My Posts</h3>\r\n                <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} />\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {postsListing}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default MyBlog;\r\n","import React from \"react\";\r\nimport {updateNewPostTextActionCreator, addPostActionCreator} from \"../../../redux/profile-reducer\" ;\r\nimport MyBlog from './MyBlog';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text)\r\n            dispatch(action)\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nconst MyBlogContainer = connect(mapStateToProps, mapDispatchToProps)(MyBlog);\r\n\r\nexport default MyBlogContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./MyBlog/ProfileInfo/ProfileInfo\";\r\nimport s from \"./Profile.module.css\";\r\nimport MyBlogContainer from './MyBlog/MyBlogContainer';\r\n// import { updateStatus } from '../../redux/profile-reducer';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={s.profileStyle}>\r\n            <ProfileInfo profile={props.profile} \r\n                status = {props.status} \r\n                updateStatus ={props.updateStatus} />\r\n            <MyBlogContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React from \"react\";\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom'\r\n// import { withLoginRedirect } from '../../hoc/withLoginRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {userId = 5434;}\r\n        this.props.getUserProfile (userId);\r\n        this.props.getStatus (userId);\r\n    }\r\n    render () {\r\n        return <Profile {...this.props} \r\n            profile = {this.props.profile} \r\n            status = {this.props.status} \r\n            updateStatus = {this.props.updateStatus} \r\n        />\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n});\r\n\r\nexport default compose ( \r\n    connect( mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter, \r\n    // withLoginRedirect\r\n) ( ProfileContainer );\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logoOwl from \"../../assets/images/logoOwl.webp\"\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img className={s.img} src={logoOwl} alt=\"logo\" />\r\n            <div className={s.loginBlock} >\r\n                {props.isAuth ? props.login\r\n                : <NavLink to={ '/login'} > LOGIN\r\n                </NavLink>\r\n                }\r\n                \r\n            </div>\r\n        </header>\r\n    );\r\n};\r\nexport default Header;\r\n","import { dimychAPI } from '../api/api';\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\n// {\"data\":{\"id\":5434,\"login\":\"0nton\",\"email\":\"dunkip24@gmail.com\"},\"messages\":[],\"resultCode\":0}\r\nlet initialState = { \r\n    data:{\r\n        id: null,\r\n        login: null,\r\n        email: null\r\n    },\r\n    messages:[],\r\n    resultCode:0,\r\n    isFetching: false,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            \r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                isAuth: true\r\n                 // data from here (second line) will rewrite existed properties with same name\r\n            };\r\n\r\n    default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id, login, email) => ({ type: SET_USER_DATA, data: {id, login, email} });\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return dimychAPI.authMe()\r\n    .then(data => {\r\n        if (data.resultCode === 0) {\r\n            let {id, login, email} = data.data;\r\n            dispatch(setAuthUserData(id, login, email));\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { getAuthUserData } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n    render () {\r\n        return <Header {...this.props} />\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.data.login\r\n});\r\nexport default connect(mapStateToProps, {getAuthUserData}) (HeaderContainer);\r\n","import React from 'react';\r\n\r\nconst Login = (props) => {\r\n    return <h1>LOGIN</h1>\r\n}\r\n\r\nexport default Login;","import React from \"react\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\"; // BrowserRouter,\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport NavbarContainer from './components/Navbar/NavbarContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from './components/Login/Login';\n\nconst App = props => {\n    \n    return (        \n        <div className=\"app_wrapper\">\n            <HeaderContainer />\n            <NavbarContainer />\n            <div className=\"allcontent\">\n                <Route\n                    path=\"/dialogs\"\n                    render={() => (\n                        <DialogsContainer />\n                    )}\n                />\n                <Route\n                    path=\"/profile/:userId?\"\n                    render={() => (\n                        <ProfileContainer />\n                    )}\n                />\n                <Route\n                    path=\"/findusers\"\n                    render={() => (\n                        <UsersContainer />\n                    )}\n                />\n                <Route\n                    path=\"/login\"\n                    render={() => (\n                        <LoginPage />\n                    )}\n                />\n                <Route path=\"/news\" component={News} />\n                <Route path=\"/music\" component={Music} />\n                <Route path=\"/settings\" component={Settings} />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","\r\nlet initialState = {\r\n    friends: [\r\n        {\r\n            id: 0,\r\n            name: \"me\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR0qSOrkr1kqwdgdyuHRxwG_78gd3fX2S9SAMqPGwJQLipr_Loe&s\"\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTBY_mo1rQhrhsQTkX3jYf4NlJ_3G373KksH8YStqpH9Ie0Mmagrg&s\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"wife\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPaHmYCx5J4tzO1c7OSThTK5U99OsZgx2sD9VhnjTb3SeCPjrM&s\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"bro\",\r\n            linkto:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT2WGfX5qsWFPFmBCE-g8KRk7SS-V1HXZo2vX8dRYOw0NrhtcV6&s\"\r\n        }\r\n        //https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSOGsz4cwsoNq09gMJ3roiDb8rOoRAoNr1DBn3PesZh1pnstzBS&s\r\n        //https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTHk85P6r1iGSHDaJ286R2Ml5oTlwJoQAAxh5Y5SBl7Ju3THMaV&s\r\n    ]\r\n};\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default navbarReducer;","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport navbarReducer from './navbar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n// import React from 'react';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    friendsPage: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store'\nimport { HashRouter } from \"react-router-dom\"; \nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store} >\n            <App />\n        </Provider>\n        \n    </HashRouter>, document.getElementById('root')\n);\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}