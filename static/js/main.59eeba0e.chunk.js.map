{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyBlog/Post/Post.module.css","components/Header/Header.module.css","components/Profile/MyBlog/MyBlog.module.css","components/Profile/MyBlog/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","serviceWorker.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyBlog/Post/Post.jsx","redux/state.js","components/Profile/MyBlog/MyBlog.jsx","components/Profile/MyBlog/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/PersonDialog/PersonDialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","s","header","img","src","alt","FriendIcon","props","friendPortrait","friendIcon","linkto","name","Navbar","FriendsListing","friendsPage","friends","map","d","sidebar","to","activeClassName","activeChoice","friendsSidebar","friendsList","Post","post","avatar","likesCount","store","_state","dialogsPage","dialogs","id","messages","author","message","newMessageBody","profilePage","posts","likes","newPostText","getState","this","_callSubscriber","console","log","subscribe","observer","dispatch","action","type","newPost","push","newText","body","MyBlog","postsListing","p","newPostElement","React","createRef","myblog","inputPost","onChange","text","current","value","updateNewPostTextActionCreator","ref","onClick","ProfileInfo","imgheader","profileinfo","Profile","profileStyle","PersonDialog","path","personDialog","activeDialog","Message","me","penpal","Dialogs","dialogsListing","messagesListing","m","personDialogs","e","target","updateNewMessageBodyCreator","placeholder","News","newsBG","Music","musicBG","Settings","settingsBG","App","state","render","component","rerenderEntireTree","ReactDOM","bind","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59eeba0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Navbar_sidebar__1WuLf\",\"activeChoice\":\"Navbar_activeChoice__36Exb\",\"friendsSidebar\":\"Navbar_friendsSidebar__3Arg2\",\"friendsList\":\"Navbar_friendsList__1DLQD\",\"friendPortrait\":\"Navbar_friendPortrait__T6fCf\",\"friendIcon\":\"Navbar_friendIcon__39Vbb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2y4iT\",\"personDialogs\":\"Dialogs_personDialogs__1t0HG\",\"personDialog\":\"Dialogs_personDialog__255Aw\",\"activeDialog\":\"Dialogs_activeDialog__1_wt5\",\"messages\":\"Dialogs_messages__3MhDK\",\"penpal\":\"Dialogs_penpal__3xgqM\",\"me\":\"Dialogs_me__3XV3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"Post_author__ryOld\",\"avatar\":\"Post_avatar__2h4_E\",\"post\":\"Post_post__2zKh-\",\"likesCount\":\"Post_likesCount__3B1m9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Jeir\",\"img\":\"Header_img__CYprL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myblog\":\"MyBlog_myblog__3MaXz\",\"inputPost\":\"MyBlog_inputPost__3YfUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileinfo\":\"ProfileInfo_profileinfo__1EGJw\",\"imgheader\":\"ProfileInfo_imgheader__VrqiZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStyle\":\"Profile_profileStyle__ZJqC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsBG\":\"News_newsBG__1DNFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicBG\":\"Music_musicBG__26gYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsBG\":\"Settings_settingsBG__2PhX-\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img className={s.img} src=\"https://lh3.googleusercontent.com/proxy/BCz7eiLspmtyneuf76NgzYyKCbssdracT5O5asseFvNZdBrI7NKvdIaulX7ms03lw81cssK29WIFFD1KqKfrnTakW5ohtcJWdTb_p81Tocv5L6BZmha7762cTIoM9zqA_p2ppwv6FwIzXbsNDbjaxbdOmd5NR430ZxqUiqa5ew=w530-h292-p-rw\" alt=\"logo\" />\r\n        </header>\r\n    );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst FriendIcon = props => {\r\n    return (\r\n        <div className={s.friendPortrait}>\r\n            <img className={s.friendIcon} src={props.linkto} alt=\"\"/>\r\n            {props.name}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Navbar = props => {\r\n\r\n    let FriendsListing = props.friendsPage.friends.map( d => <FriendIcon name={d.name} linkto={d.linkto} /> )\r\n\r\n    return (\r\n        <div  className={s.sidebar}>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/profile\" activeClassName={s.activeChoice} >Profile and Blog</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/dialogs\" activeClassName={s.activeChoice} >Dialogs</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/news\" activeClassName={s.activeChoice} >News</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/music\" activeClassName={s.activeChoice} >Music</NavLink>\r\n                    </li>\r\n                </ul>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeChoice} >Settings</NavLink>\r\n            </nav>\r\n            <div className={s.friendsSidebar}>\r\n                <h2>Friends</h2> \r\n                <div className={s.friendsList}>\r\n                    { FriendsListing }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = props => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img className={s.avatar}\r\n                src=\"https://i.pinimg.com/originals/80/f3/cd/80f3cd1517905873ea6a5c5ed7b53784.jpg\"\r\n                alt=\"post photo\"\r\n            />\r\n            <div className={s.post}>{props.post}</div>\r\n            <button>like</button>\r\n            <div className={s.likesCount}>likes: {props.likesCount}</div>\r\n        </div>\r\n    );\r\n};\r\nexport default Post;\r\n","const ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\n\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\n\r\nlet store = {\r\n    _state: {\r\n        dialogsPage: {\r\n            dialogs: [\r\n                { id: 1, name: \"Dimych\" },\r\n                { id: 2, name: \"wife\" },\r\n                { id: 3, name: \"bro\" }\r\n            ],\r\n\r\n            messages: [\r\n                { id: 0, author: \"me\", message: \"Hi\" },\r\n                { id: 1, author: \"Dimych\", message: \"how r u\" },\r\n                { id: 2, author: \"me\", message: \"great what's new?\" },\r\n                { id: 3, author: \"Dimych\", message: \"let's learn React!\" },\r\n                { id: 4, author: \"me\", message: \"Come on, let's start!\" }\r\n            ],\r\n            newMessageBody: \"\"\r\n        },\r\n        profilePage: {\r\n            posts: [\r\n                { id: 0, post: \"It's my blog\", likes: 3 },\r\n                { id: 1, post: \"I was a designer for 10 years\", likes: 5 },\r\n                { id: 2, post: \"Now I'm starting to learn React\", likes: 9 }\r\n            ],\r\n            newPostText: \"\"\r\n        },\r\n        friendsPage: {\r\n            friends: [\r\n                {\r\n                    id: 0,\r\n                    name: \"me\",\r\n                    linkto:\r\n                        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR0qSOrkr1kqwdgdyuHRxwG_78gd3fX2S9SAMqPGwJQLipr_Loe&s\"\r\n                },\r\n                {\r\n                    id: 1,\r\n                    name: \"Dimych\",\r\n                    linkto:\r\n                        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTBY_mo1rQhrhsQTkX3jYf4NlJ_3G373KksH8YStqpH9Ie0Mmagrg&s\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: \"wife\",\r\n                    linkto:\r\n                        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPaHmYCx5J4tzO1c7OSThTK5U99OsZgx2sD9VhnjTb3SeCPjrM&s\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: \"bro\",\r\n                    linkto:\r\n                        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT2WGfX5qsWFPFmBCE-g8KRk7SS-V1HXZo2vX8dRYOw0NrhtcV6&s\"\r\n                }\r\n                //https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSOGsz4cwsoNq09gMJ3roiDb8rOoRAoNr1DBn3PesZh1pnstzBS&s\r\n                //https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTHk85P6r1iGSHDaJ286R2Ml5oTlwJoQAAxh5Y5SBl7Ju3THMaV&s\r\n            ]\r\n        }\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    _callSubscriber() {\r\n        console.log(\"state is changed!\");\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        if (action.type === ADD_POST) {\r\n            let newPost = {\r\n                id: 3,\r\n                post: this._state.profilePage.newPostText,\r\n                likes: 0\r\n            };\r\n            this._state.profilePage.posts.push(newPost);\r\n            this._state.profilePage.newPostText = \"\";\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\r\n            this._state.dialogsPage.newMessageBody = action.body;\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === SEND_MESSAGE) {\r\n            let body = this._state.dialogsPage.newMessageBody;\r\n            this._state.dialogsPage.newMessageBody = \"\";\r\n            this._state.dialogsPage.messages.push({ id: 9, author: \"me\", message: body });\r\n            this._callSubscriber(this._state);\r\n        }\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const updateNewPostTextActionCreator = text => \r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text});\r\n\r\nexport const sendNewMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = body => \r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body});\r\n\r\nexport default store;\r\nwindow.store = store;\r\n","import React from \"react\";\r\nimport s from \"./MyBlog.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {updateNewPostTextActionCreator, addPostActionCreator} from \"../../../redux/state\" ;\r\n\r\n\r\nconst MyBlog = props => {\r\n\r\n    let postsListing = props.profilePage.posts.map(p => <Post post={p.post} likesCount={p.likes} />)\r\n\r\n    let newPostElement = React.createRef()\r\n\r\n    let addPost = () => {\r\n        props.dispatch(addPostActionCreator());\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.dispatch(updateNewPostTextActionCreator(text));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.myblog}>\r\n            <div className={s.inputPost}>\r\n                <h3>My Posts</h3>\r\n                <textarea onChange={onPostChange} ref={newPostElement} value={props.profilePage.newPostText} />\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {postsListing}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default MyBlog;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <img\r\n                className={s.imgheader}\r\n                src=\"https://www.beststartcompton.org/wp-content/uploads/2019/02/39875853-header-wallpapers.jpg\"\r\n                alt=\"content-header\"\r\n            />\r\n\r\n            <div className={s.profileinfo}>\r\n                <div>ava + personal info</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyBlog from \"./MyBlog/MyBlog\";\r\nimport ProfileInfo from \"./MyBlog/ProfileInfo/ProfileInfo\";\r\nimport s from \"./Profile.module.css\";\r\n\r\n\r\nconst Profile = props => {\r\n    \r\n    return (\r\n        <div className={s.profileStyle}>\r\n            <ProfileInfo/>\r\n            <MyBlog profilePage={props.profilePage} \r\n            dispatch={props.dispatch} \r\n            />\r\n        </div>\r\n    );\r\n};\r\n// export posts;\r\nexport default Profile;\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst PersonDialog = props => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.personDialog + \" \" + s.activeDialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonDialog;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = props => {\r\n    const authorStyle = () => props.messages.author==='me' ? s.me : s.penpal\r\n    return <div className={authorStyle()}>{props.messages.author}: {props.messages.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PersonDialog from \"./PersonDialog/PersonDialog\";\r\nimport Message from \"./Message/Message\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {updateNewMessageBodyCreator, sendNewMessageCreator} from \"../../redux/state\" ;\r\n\r\nconst Dialogs = props => {\r\n    \r\n    let dialogsListing = props.dialogsPage.dialogs.map( d => <PersonDialog id={d.id} name={d.name} /> )\r\n    let messagesListing = props.dialogsPage.messages.map( m => <Message messages={m} />)\r\n    let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    // let newMessageElement = React.createRef()\r\n\r\n    let onSendMessageClick = () => {\r\n        props.dispatch(sendNewMessageCreator())\r\n    }\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.dispatch(updateNewMessageBodyCreator(body))\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.personDialogs}>\r\n                { dialogsListing }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesListing }</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea \r\n                            value = {newMessageBody} \r\n                            onChange = {onNewMessageChange}\r\n                            placeholder=\"Enter your message\"></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick = { onSendMessageClick }>Send message</button>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Dialogs;\r\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={s.newsBG}>\r\n            News\r\n    </div>\r\n    );\r\n};\r\nexport default News;\r\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\n// import Post from \"../Profile/MyPosts/Post/Post\";\r\nimport s from \"./Music.module.css\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={s.musicBG}>\r\n            Music\r\n    </div>\r\n    );\r\n};\r\nexport default Music;\r\n","import React from \"react\";\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\n// import Post from \"../Profile/MyPosts/Post/Post\";\r\nimport s from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={s.settingsBG}>\r\n            Settings\r\n    </div>\r\n    );\r\n};\r\nexport default Settings;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport { Route } from \"react-router-dom\"; // BrowserRouter,\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\n\nconst App = props => {\n    return (\n        <div className=\"app_wrapper\">\n            <Header />\n            <Navbar friendsPage={props.state.friendsPage} />\n            <div className=\"allcontent\">\n                <Route\n                    path=\"/dialogs\"\n                    render={() => (\n                        <Dialogs \n                            dialogsPage={props.state.dialogsPage} \n                            dispatch={props.dispatch}\n                        />\n                    )}\n                />\n                <Route\n                    path=\"/profile\"\n                    render={() => (\n                        <Profile\n                            profilePage={props.state.profilePage}\n                            dispatch={props.dispatch}\n                        />\n                    )}\n                />\n                <Route path=\"/news\" component={News} />\n                <Route path=\"/music\" component={Music} />\n                <Route path=\"/settings\" component={Settings} />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\nimport store from './redux/state'\nimport { HashRouter } from \"react-router-dom\"; \n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(\n    <HashRouter>\n        <App state = {state} dispatch = {store.dispatch.bind(store)}/>\n    </HashRouter>, document.getElementById('root')\n);\n}\n\nrerenderEntireTree (store.getState());\n\nstore.subscribe (rerenderEntireTree);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}